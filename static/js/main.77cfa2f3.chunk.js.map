{"version":3,"sources":["containers/containersCommonFile/containerIdentify.tsx","containers/containersCommonFile/containeEmployee.tsx","containers/containersMoviment/containerMovimentHistory.tsx","containers/containersMoviment/containerSalaryMoviment.tsx","containers/containersMoviment/containerStructuralMoviment.tsx","containers/containersCommonFile/containerObservation.tsx","layoutPage/FormPageMovimentation.tsx","App.tsx","index.tsx"],"names":["ContainerIdentify","useState","name","value","fields","Form","useForm","form","labelCol","span","wrapperCol","labelAlign","onFieldsChange","_","allFields","gutter","Item","label","readOnly","ContainerEmployee","setFields","Option","Select","rules","required","message","title","allowClear","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","toLocaleLowerCase","id","map","index","ContainerMovimentHistory","dataSource","before","after","modality","office","wage","columns","dataIndex","key","width","selectOption","enaCar","enaPorcentagem","enaWork","enaRule","enaWage","ContainerSalaryMoviment","props","modalityType","setModalityType","enaModal","setEnaModal","enaModalPromo","setEnaModalPromo","enaModalEnquad","setEnaModalEnquad","Date","funcOption","useEffect","tableWarning","descript","now","btn","type","size","onClick","notification","close","styleNote","icon","WarningOutlined","style","color","background","open","description","duration","handleOk","handleWage","handleScale","hidden","mode","onValuesChange","changedValues","allValues","className","defaultValue","onChange","undefined","getFieldValue","validator","rule","data","getMonth","_d","console","log","getDate","Promise","resolve","reject","Error","format","trigger","disabled","warningOnly","min","max","addonAfter","onPressEnter","e","initialSalary","percIncrease","modeSalary","politicIncrease","currentWageAfter","addonBefore","visible","footer","centered","closable","onOk","onCancel","okText","cancelText","okButtonProps","cancelButtonProps","ContainerStructuralMoviment","notificationBranchSind","tableWarningStr","bordered","valuePropName","branchValue","ContainerObservation","usu","dateTime","role","setDataSource","count","setCount","onFinish","values","newObs","toString","toLocaleString","timeZone","prev","marginLeft","block","htmlType","TextArea","showCount","maxLength","FormPageMovimentation","selectMode","setSelectMode","Provider","onFormChange","changedFields","forms","structuralMoviment","setFieldsValue","movimentType","salarialMoviment","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77cfa2f3.chunk.js","sourcesContent":["import { Input, Form, Row, Col, Radio } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { sendRequest } from \"../../controlers/services/userRequest\";\r\n//import { WorkflowService } from \"../../core/workflow.service\";\r\n\r\n//const DataWorkflow = new WorkflowService();\r\n\r\n//const DataUser = DataWorkflow.requestUserData();\r\n\r\ninterface DataSubordinate {\r\n  nomfun: string;\r\n  numemp: number;\r\n  numcad: number;\r\n  tipcol: number;\r\n  postra: string;\r\n}\r\n\r\ninterface DataRequester {\r\n  codthp: number;\r\n  estpos: number;\r\n  idepos: number;\r\n}\r\n\r\nexport let DataToRequest: DataRequester;\r\n\r\nexport default function ContainerIdentify() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"fullname\", value: \"\" },\r\n    { name: \"registry\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"office\", value: \"\" },\r\n    { name: \"boss\", value: \"\" },\r\n    { name: \"who\", value: \"\" },\r\n  ]);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  /* DataUser.then((response) => {\r\n    let nome = response.fullname;\r\n    console.log(response);\r\n    //console.log(typeof nome);\r\n\r\n    const paramName = {\r\n      //nome: response.fullname,\r\n      //email: response.email,\r\n      nome: \"Bruno Milani\",\r\n      email: \"brunomilani@cvccorp.com.br\",\r\n    };\r\n\r\n    const dataUserRequest = sendRequest(\r\n      \"POST\",\r\n      \"br.com.cvc.wf.geral\",\r\n      \"GetDadosSolicitante\",\r\n      paramName\r\n    );\r\n\r\n    const paramReq = {\r\n      codthp: dataUserRequest.codthp,\r\n      estpos: dataUserRequest.estpos,\r\n      idepos: dataUserRequest.idepos,\r\n    };\r\n\r\n    const getSubordinados = sendRequest(\r\n      \"POST\",\r\n      \"br.com.cvc.wf.geral\",\r\n      \"GetSubordinados\",\r\n      paramReq\r\n    );\r\n\r\n    //console.log(dataUserRequest);\r\n    //console.log(getSubordinados.colaboradores);\r\n\r\n    form.setFieldsValue({\r\n      fullname: dataUserRequest.nome,\r\n      registry: dataUserRequest.numcad,\r\n      subsidiary: dataUserRequest.filial,\r\n      office: dataUserRequest.cargo,\r\n      boss: dataUserRequest.supime,\r\n    });\r\n  }); */\r\n\r\n  /* const paramName = {\r\n    //nome: response.fullname,\r\n    //email: response.email,\r\n    nome: \"Bruno Milani\",\r\n    email: \"brunomilani@cvccorp.com.br\",\r\n  };\r\n\r\n  const dataUserRequest = sendRequest(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.geral\",\r\n    \"GetDadosSolicitante\",\r\n    paramName\r\n  );\r\n\r\n  dataUserRequest.then(async (response) => {\r\n    console.log(response);\r\n    //console.log(response.nome);\r\n\r\n    DataToRequest = {\r\n      codthp: response.codthp,\r\n      estpos: response.estpos,\r\n      idepos: response.idepos,\r\n    };\r\n\r\n    form.setFieldsValue({\r\n      fullname: response.nome,\r\n      registry: response.numcad,\r\n      subsidiary: response.filial,\r\n      office: response.cargo,\r\n      boss: response.supime,\r\n    });\r\n  });\r\n */\r\n  //subordinate = getSubordinados.colaboradores;\r\n\r\n  //console.log(subordinate);\r\n  //console.log(getSubordinados.colaboradores);\r\n\r\n  /* form.setFieldsValue({\r\n    fullname: dataUserRequest.nome,\r\n    registry: dataUserRequest.numcad,\r\n    subsidiary: dataUserRequest.filial,\r\n    office: dataUserRequest.cargo,\r\n    boss: dataUserRequest.supime,\r\n  });\r\n */\r\n  //console.log(subordinate);\r\n\r\n  const onChangeRadio = (value) => {\r\n    //console.log(value.target.value);\r\n    form.setFieldsValue({ who: value.target.value });\r\n    form.submit();\r\n  };\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Identificação do Solicitante</legend>\r\n        <Form\r\n          name=\"formIdentify\"\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          form={form}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"fullname\"} label={\"Nome Solicitante\"}>\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"registry\"} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"office\"} label={\"Cargo Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"subsidiary\"} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"boss\"} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Select, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n//import { DataToRequest } from \"./containerIdentify\";\r\n//import { sendRequest } from \"../../controlers/services/userRequest\";\r\n//import { response } from \"express\";\r\n//import Item from \"antd/lib/list/Item\";\r\n//import { nodeModuleNameResolver } from \"typescript\";\r\n\r\ninterface DataSubordinate {\r\n  nomfun: string;\r\n  numemp?: number;\r\n  numcad?: number;\r\n  tipcol?: number;\r\n  postra?: string;\r\n}\r\n\r\n//let dataEmployees: DataSubordinate[] | any;\r\n\r\nexport default function ContainerEmployee() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: [\"registryEmployee\"], value: \"\" },\r\n    { name: [\"positionemployee\"], value: \"\" },\r\n    { name: [\"subsidiaryEmployee\"], value: \"\" },\r\n    { name: [\"bossEmployee\"], value: \"\" },\r\n    { name: [\"custCenter\"], value: \"\" },\r\n  ]);\r\n\r\n  const [optionName, setOptionName] = useState([\r\n    \"Patricia\",\r\n    \"Gustavo\",\r\n    \"Maria\",\r\n  ]);\r\n\r\n  const names = [\r\n    { id: 1, name: \"Patricia\" },\r\n    { id: 2, name: \"Gustavo\" },\r\n    { id: 3, name: \"Maria\" },\r\n  ];\r\n\r\n  //console.log(DataToRequest);\r\n  //console.log(DataToRequest.DataToRequest);\r\n\r\n  //const dataInfo = DataToRequest.DataToRequest;\r\n\r\n  let nameEmployees: string[];\r\n  //console.log(dataInfo);\r\n\r\n  /* const handleSearch = () => {\r\n    console.log(optionName);\r\n    //fetchList(setOptionName);\r\n  }; */\r\n\r\n  /* if (dataInfo) {\r\n    const url =\r\n      \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.geral&port=GetSubordinados&DEBUG=true\";\r\n\r\n    const username = \"senior\";\r\n    const password = \"senior\";\r\n\r\n    const paramReq = {\r\n      codthp: dataInfo.codthp,\r\n      estpos: dataInfo.estpos,\r\n      idepos: dataInfo.idepos,\r\n    };\r\n\r\n    dataEmployees = fetch(url, {\r\n      mode: \"cors\",\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json;charset=utf-8\",\r\n        Authorization: \"Basic \" + window.btoa(username + \":\" + password),\r\n        user: \"senior\",\r\n      },\r\n      body: JSON.stringify(paramReq),\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((user) => {\r\n        console.log(user.colaboradores);\r\n        return user.colaboradores;\r\n        return user.colaboradores.map((item) => ({\r\n          nomfun: item.nomfun,\r\n          numemp: item.numemp,\r\n          numcad: item.numcad,\r\n          tipcol: item.tipcol,\r\n          postra: item.postra,\r\n        }));\r\n      });\r\n  } */\r\n\r\n  //console.log(dataEmployees);\r\n\r\n  /* dataEmployees.then((response) => {\r\n    console.log(response.colaboradores);\r\n  }); */\r\n\r\n  /* if (dataInfo) {\r\n    const paramReq = {\r\n      codthp: dataInfo.codthp,\r\n      estpos: dataInfo.estpos,\r\n      idepos: dataInfo.idepos,\r\n    };\r\n\r\n    console.log(paramReq);\r\n\r\n    const getSubordinados = sendRequest(\r\n      \"POST\",\r\n      \"br.com.cvc.wf.geral\",\r\n      \"GetSubordinados\",\r\n      paramReq\r\n    );\r\n\r\n    getSubordinados.then((response) => {\r\n      console.log(response);\r\n      console.log(response.colaboradores[3]);\r\n      for (let i = 1; i < Object.keys(response.colaboradores).length; i++) {\r\n        dataEmployees.push(response.colaboradores[i].nomfun);\r\n      }\r\n    });\r\n\r\n    console.log(dataEmployees);\r\n    //console.log(getSubordinados);\r\n\r\n    dataEmployees.map((nome) => {\r\n      console.log(nome);\r\n    });\r\n  }\r\n */\r\n  //console.log(dataEmployees);\r\n  //console.log(JSON.stringify(dataEmployees));\r\n  //console.log(typeof dataEmployees);\r\n  /* dataEmployees.then((response) => {\r\n    //console.log(response);\r\n    //console.log(typeof response);\r\n    response.forEach((element) => {\r\n      console.log(element.nomfun);\r\n    });\r\n  }); */\r\n\r\n  //console.log(dataEmployees);\r\n  //console.log(typeof dataEmployees);\r\n\r\n  const { Option } = Select;\r\n\r\n  //let options: any[];\r\n\r\n  /* async function fetchList() {\r\n    const url =\r\n      \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.geral&port=GetSubordinados&DEBUG=true\";\r\n\r\n    const username = \"senior\";\r\n    const password = \"senior\";\r\n\r\n    const paramReq = {\r\n      codthp: 1,\r\n      estpos: 2,\r\n      idepos: 1,\r\n    };\r\n\r\n    const response = await fetch(url, {\r\n      mode: \"cors\",\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json;charset=utf-8\",\r\n        Authorization: \"Basic \" + window.btoa(username + \":\" + password),\r\n        user: \"senior\",\r\n      },\r\n      body: JSON.stringify(paramReq),\r\n    });\r\n\r\n    let colaboradores = [];\r\n    response.json().then((data) => {\r\n      //console.log(data.colaboradores);\r\n      colaboradores.push(data.colaboradores.map((repo) => repo.nomfun));\r\n      //console.log(colaboradores);\r\n    });\r\n\r\n    setOptionName(colaboradores);\r\n    console.log(colaboradores);\r\n    console.log(optionName);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchList();\r\n  }, []); */\r\n\r\n  function options() {\r\n    const names = Object.entries(optionName[0]);\r\n    //console.log(optionName[0][1]);\r\n    //console.log(names);\r\n    for (const key in names) {\r\n      console.log(key);\r\n      console.log(names);\r\n      return (\r\n        <Option key={key} value={names[key][1]}>\r\n          {names[key][1]}\r\n        </Option>\r\n      );\r\n    }\r\n    //return <Option value={item}>{item}</Option>;\r\n  }\r\n\r\n  //options();\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações do Colaborador</legend>\r\n\r\n        <Form\r\n          name=\"formEmployee\"\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            setFields(allFields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"nameEmployee\"]}\r\n                label={\"Colaborador\"}\r\n                rules={[\r\n                  { required: true },\r\n                  { message: \"Obrigatório selecionar o colaborador.\" },\r\n                ]}\r\n              >\r\n                <Tooltip title=\"Selecione o nome do colaborador\">\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Selecione Colaborador\"\r\n                    //onSearch={handleSearch}\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option?.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLocaleLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {names.map((value, index) => {\r\n                      //console.log(value, index);\r\n                      //console.log(value.name);\r\n                      return (\r\n                        <Option key={index} value={value.name}>\r\n                          {value.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Tooltip>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"registryEmployee\"]} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"positionemployee\"]}\r\n                label={\"Cargo Colaborador\"}\r\n              >\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"subsidiaryEmployee\"]} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"bossEmployee\"]} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Table } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\n\r\nexport default function ContainerMovimentHistory() {\r\n  const data = [\r\n    {\r\n      id: \"583336\",\r\n      before: \"01/11/21\",\r\n      after: \"Atual\",\r\n      modality: \"Dissídio Coletivo\",\r\n      office: \"Analista de Crédito e cobrança\",\r\n      wage: \"R$ 6215,00\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Vigência De\",\r\n      dataIndex: \"before\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Vigência Para\",\r\n      dataIndex: \"after\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Motivo/Modalidade\",\r\n      dataIndex: \"modality\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n\r\n    {\r\n      title: \"Salário\",\r\n      dataIndex: \"wage\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <fieldset>\r\n      <legend>Histórico das Movimentações do Colaborador</legend>\r\n      <Table dataSource={data} columns={columns}></Table>\r\n    </fieldset>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  DatePicker,\r\n  Checkbox,\r\n  InputNumber,\r\n  Modal,\r\n  notification,\r\n  Button,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\n\r\nlet selectOption = {\r\n  enaCar: true,\r\n  enaPorcentagem: true,\r\n  enaWork: true,\r\n  enaRule: false,\r\n  enaWage: true,\r\n};\r\n\r\nexport default function ContainerSalaryMoviment(props) {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"movimentType\", value: \"salarial\" },\r\n    { name: \"modality\", value: \"\" },\r\n    { name: \"movimentDateStr\", value: \"\" },\r\n    { name: \"officeDestiny\", value: \"\" },\r\n    { name: \"percentage\", value: \"\" },\r\n    { name: \"workingDay\", value: \"\" },\r\n    { name: \"startSalary\", value: 1000 },\r\n    { name: \"finalSalary\", value: 2500 },\r\n  ]);\r\n\r\n  const [modalityType, setModalityType] = useState(selectOption);\r\n  const [enaModal, setEnaModal] = useState(false);\r\n  const [enaModalPromo, setEnaModalPromo] = useState(false);\r\n  const [enaModalEnquad, setEnaModalEnquad] = useState(false);\r\n  const dateNow = new Date();\r\n  const [form] = Form.useForm();\r\n  const modalityTypeSalary = [\r\n    \"Promoção\",\r\n    \"Promoção escalonada\",\r\n    \"Mérito\",\r\n    \"Enquadramento\",\r\n    \"Incorporação de verbas\",\r\n    \"Alteração de carga horária\",\r\n    \"Função\",\r\n    \"Ajuste de alvo\",\r\n    \"Mudança de cargo sem reajuste salarial\",\r\n    \"Processo seletivo interno\",\r\n  ];\r\n\r\n  const funcOption = (option: string) => {\r\n    if (option === \"\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"percentage\") {\r\n      if (fields[0].value > 1000) {\r\n        selectOption = {\r\n          enaPorcentagem: false,\r\n          enaCar: true,\r\n          enaWork: true,\r\n          enaRule: true,\r\n          enaWage: true,\r\n        };\r\n      } else {\r\n        selectOption = {\r\n          enaPorcentagem: false,\r\n          enaCar: true,\r\n          enaWork: true,\r\n          enaRule: true,\r\n          enaWage: true,\r\n        };\r\n      }\r\n    } else if (option === \"escala\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: false,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"role\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: false,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"wage\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: false,\r\n      };\r\n    }\r\n  };\r\n\r\n  const chooseMode = (value) => {\r\n    if (value === undefined) {\r\n      funcOption(\"\");\r\n    } else if (value === \"Ajuste de alvo\") {\r\n      funcOption(\"percentage\");\r\n    } else if (value === \"Promoção\" || value === \"Processo seletivo interno\") {\r\n      setEnaModalPromo(true);\r\n    } else if (\r\n      value === \"Mérito\" ||\r\n      value === \"Promoção escalonada\" ||\r\n      value === \"Incorporação de verbas\" ||\r\n      value === \"Alteração de carga horária\"\r\n    ) {\r\n      setEnaModal(true);\r\n    } else if (\r\n      value === \"Função\" ||\r\n      value === \"Mudança de cargo sem reajuste salarial\"\r\n    ) {\r\n      funcOption(\"role\");\r\n    } else if (value === \"Enquadramento\") {\r\n      setEnaModalEnquad(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setModalityType(selectOption);\r\n  }, [selectOption]);\r\n\r\n  const tableWarning = (title, descript) => {\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    notification.open({\r\n      message: title,\r\n      description: descript,\r\n      btn,\r\n      key,\r\n      ...styleNote,\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  const politicIncrease = () => {\r\n    const currentWage = 800;\r\n    const initialSalary = form.getFieldValue([\"startSalary\"]);\r\n    const percIncrease = form.getFieldValue([\"percentage\"]);\r\n    const modeSalary = form.getFieldValue([\"modality\"]);\r\n\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    const title = \"Política da empresa\";\r\n    const rangePromo = \", permitido aumento entre 5% a 30%. Favor corrigir.\";\r\n    const rangeMerito = \", permitido aumento entre 5% a 20%. Favor corrigir.\";\r\n\r\n    if (currentWage > initialSalary) {\r\n      if (\r\n        modeSalary === \"Promoção\" ||\r\n        modeSalary === \"Promoção escalonada\" ||\r\n        modeSalary === \"Processo seletivo interno\" ||\r\n        modeSalary === \"Incorporação de verbas\" ||\r\n        modeSalary === \"Ajuste de alvo\" ||\r\n        modeSalary === \"Processo seletivo interno\"\r\n      ) {\r\n        if (percIncrease < 5) {\r\n          const description =\r\n            \"Porcentagem abaixo da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangePromo;\r\n          tableWarning(title, description);\r\n\r\n          return;\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangePromo;\r\n          tableWarning(title, description);\r\n          return;\r\n        }\r\n      } else if (modeSalary === \"Mérito\") {\r\n        if (percIncrease < 5) {\r\n          const description =\r\n            \"Porcentagem abaixo da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangeMerito;\r\n          tableWarning(title, description);\r\n          return;\r\n        } else if (percIncrease > 20) {\r\n          const description =\r\n            \"Porcentagem acima da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangeMerito;\r\n          tableWarning(title, description);\r\n          return;\r\n        }\r\n      }\r\n    } else if (currentWage < initialSalary) {\r\n      if (\r\n        modeSalary === \"Promoção\" ||\r\n        modeSalary === \"Promoção escalonada\" ||\r\n        modeSalary === \"Processo seletivo interno\" ||\r\n        modeSalary === \"Incorporação de verbas\" ||\r\n        modeSalary === \"Ajuste de alvo\" ||\r\n        modeSalary === \"Processo seletivo interno\"\r\n      ) {\r\n        if (percIncrease < 5) {\r\n          const description = \"Porcentagem abaixo da política da empresa. \";\r\n          tableWarning(title, description);\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima de 30% será efetivado em 2 parcelas sendo a primeiro de 30% e o restante será efetivado após 90 dias. \";\r\n          tableWarning(title, description);\r\n        }\r\n      } else if (modeSalary === \"Mérito\") {\r\n        if (percIncrease < 5) {\r\n          const description = \"Porcentagem abaixo da política da empresa. \";\r\n          tableWarning(title, description);\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima de 20% será efetivado em 2 parcelas sendo a primeiro de 20% e o restante será efetivado após 90 dias. \";\r\n          tableWarning(title, description);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePercentage = (e) => {\r\n    const currentWage = 1200;\r\n    const initialSalary = fields[0].value;\r\n    const percIncrease = e;\r\n    let percHigherInicialSalary = 0;\r\n\r\n    politicIncrease();\r\n    const currentWageAfter = currentWage * (percIncrease / 100 + 1);\r\n    if (currentWageAfter > initialSalary) {\r\n      percHigherInicialSalary = (currentWageAfter / initialSalary - 1) * 100;\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    funcOption(\"percentage\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    funcOption(\"role\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleWage = () => {\r\n    funcOption(\"wage\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleScale = () => {\r\n    funcOption(\"escala\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset\r\n        hidden={\r\n          props.mode === \"salarial\" || fields[0].value === \"salarial\"\r\n            ? false\r\n            : true\r\n        }\r\n      >\r\n        <legend>Movimentação</legend>\r\n        <Form\r\n          labelCol={{ span: 12 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onValuesChange={(changedValues, allValues) => {}}\r\n          onFieldsChange={(_, allFields) => {\r\n            setModalityType(selectOption);\r\n\r\n            setFields(allFields);\r\n          }}\r\n          name=\"salarialMoviment\"\r\n          form={form}\r\n        >\r\n          <div className=\"warningPanel\">\r\n            <ul>\r\n              <li>\r\n                <p>\r\n                  As solicitações de movimentação salarial devem ser requiridas\r\n                  e aprovadas até o dia 5 para entrar em vigência no mesmo mês.\r\n                  Após essa data, entrarão em vigência no mês seguinte.\r\n                </p>\r\n              </li>\r\n              <li>\r\n                <p>\r\n                  Para entrar em vigor no mês seguinte, as solicitações devem\r\n                  ser feitas após dia 5 e antes do dia 20, inclusive sendo\r\n                  aprovadas até o dia 20. Caso contrário, somente entrarão em\r\n                  vigência no mês subsequente.\r\n                </p>\r\n              </li>\r\n              <li\r\n                hidden={\r\n                  fields[1].value === \"Promoção\" ||\r\n                  fields[1].value === \"Promoção escalonada\" ||\r\n                  fields[1].value === \"Enquadramento\" ||\r\n                  fields[1].value === \"Ajuste de alvo\" ||\r\n                  fields[1].value === \"Processo seletivo interno\"\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                <p>\r\n                  A porcentagem permitida para o colaborador acima da faixa\r\n                  salarial inicial é entre 5% a 30%.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Mérito\" ? false : true}>\r\n                <p>\r\n                  A porcentagem permitida para o colaborador acima da faixa\r\n                  salarial inicial é entre 5% a 20%.\r\n                </p>\r\n              </li>\r\n              <li\r\n                hidden={\r\n                  fields[1].value === \"Promoção\" ||\r\n                  fields[1].value === \"Promoção escalonada\" ||\r\n                  fields[1].value === \"Enquadramento\" ||\r\n                  fields[1].value === \"Ajuste de alvo\" ||\r\n                  fields[1].value === \"Processo seletivo interno\"\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                <p>\r\n                  Caso esteja abaixo da faixa salarial poderá ter aumento\r\n                  superior a 30% que será parcelado em 2, sendo a primeira de\r\n                  30% e a segunda com o valor restante após 90 dias.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Mérito\" ? false : true}>\r\n                <p>\r\n                  Caso esteja abaixo da faixa salarial poderá ter aumento\r\n                  superior a 20% que será parcelado em 2, sendo a primeira de\r\n                  20% e a segunda com o valor restante após 90 dias.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Promoção\" ? false : true}>\r\n                <p>\r\n                  Caso a proposta salarial seja superior a Política de Salários\r\n                  da empresa utilizar a opção de Promoção Escalonada\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Enquadramento\" ? false : true}>\r\n                <p>\r\n                  Se houver ajuste de Jornada o valor hora poderá ser afetado.\r\n                </p>\r\n              </li>\r\n              <p>\r\n                <Checkbox>Declaro que li todas as regras acima.</Checkbox>\r\n              </p>\r\n            </ul>\r\n          </div>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item name={\"movimentType\"} label={\"Tipo de Movimentação\"}>\r\n                <Select\r\n                  placeholder=\"Selecione Movimentação\"\r\n                  defaultValue=\"salarial\"\r\n                >\r\n                  <Select.Option value=\"salarial\">Salarial</Select.Option>\r\n                  <Select.Option value=\"estrutural\">Estrutural</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip title=\"Selecionar a modadalidade de movimentação salarial.\">\r\n                <Form.Item name={\"modality\"} label={\"Modalidade\"}>\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Modalidade\"\r\n                    onChange={chooseMode}\r\n                  >\r\n                    {modalityTypeSalary.map((value, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={value}>\r\n                          {value}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item\r\n                name={\"movimentDateStr\"}\r\n                label={\"Data da Movimentação \"}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (value) {\r\n                        const data = new Date();\r\n\r\n                        if (data.getMonth() <= value._d.getMonth()) {\r\n                          console.log(data.getDate());\r\n                          if (value._d.getDate() <= 5) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações de movimentação salarial devem ser requiridas e aprovadas até o dia 5 para entrar em vigência no mesmo mês. Após essa data, entrarão em vigência no mês seguinte.\";\r\n                            tableWarning(title, description);\r\n                          } else if (\r\n                            value._d.getDate() > 5 &&\r\n                            value._d.getDate() <= 20\r\n                          ) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"Para entrar em vigor no mês seguinte, as solicitações devem ser feitas após dia 5 e antes do dia 20, inclusive sendo aprovadas até o dia 20. Caso contrário, somente entrarão em vigência no mês subsequente.\";\r\n                            tableWarning(title, description);\r\n                          } else {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações entrarão em vigência no mês subsequente.\";\r\n                            tableWarning(title, description);\r\n                          }\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\"Data não pode ser em mês retroativo\")\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"Obrigatório o preenchimento da data de movimentação\"\r\n                          )\r\n                        );\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip\r\n                title=\"Selecione o cargo/posto de destino.\"\r\n                trigger={modalityType.enaCar ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"officeDestiny\"}\r\n                  label={\"Cargo/Posto Destino\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaCar ? false : true,\r\n                      message:\r\n                        \"Obrigatório selecionar o cargo/posto de destino\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Posto de Destino\"\r\n                    disabled={modalityType.enaCar}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Tooltip\r\n                title=\"O valor da porcentagem deve estar dentro da política da empresa.\"\r\n                trigger={modalityType.enaPorcentagem ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"percentage\"}\r\n                  label={\"Porcentagem \"}\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        if (getFieldValue(\"startSalary\") > 800) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject({\r\n                          warningOnly: true,\r\n                          message: \"Salario acima da faixa salarial inicial ok\",\r\n                        });\r\n                      },\r\n                    }),\r\n                    {\r\n                      required: modalityType.enaPorcentagem ? false : true,\r\n                      message:\r\n                        \"Obrigatório o preenchimento do valor da porcentagem\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    placeholder=\"Porcentagem\"\r\n                    min={0}\r\n                    max={100}\r\n                    disabled={modalityType.enaPorcentagem}\r\n                    addonAfter=\"%\"\r\n                    onPressEnter={handlePercentage}\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip\r\n                title=\"Selecione a Jornada de trabalho.\"\r\n                trigger={modalityType.enaWork ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workingDay\"}\r\n                  label={\"Jornada de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaWork ? false : true,\r\n                      message:\r\n                        \"Obrigatório o preenchimento do valor da porcentagem\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Jornada de Trabalho\"\r\n                    disabled={modalityType.enaWork}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Tooltip\r\n                title=\"Informe o valor do novo salário\"\r\n                trigger={modalityType.enaWage ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"wage\"}\r\n                  label={\"Salário\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaWage ? false : true,\r\n                      message: \"Obrigatório o preenchimento do novo salário\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        const finalWage = getFieldValue(\"finalSalary\");\r\n                        if (value <= finalWage) {\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Valor não permitido. Valor acima da faixa salarial final. Favor corrigir.\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    disabled={modalityType.enaWage}\r\n                    addonBefore=\"R$\"\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item name={\"startSalary\"} label={\"Faixa Salarial Inicial\"}>\r\n                <InputNumber readOnly addonBefore=\"R$\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Form.Item name={\"finalSalary\"} label={\"Faixa Salarial Final\"}>\r\n                <InputNumber readOnly addonBefore=\"R$\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            visible={enaModalPromo}\r\n            footer={[\r\n              <Button type=\"primary\" onClick={handleOk}>\r\n                % de ajuste salarial\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleWage}>\r\n                Novo salário\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleScale}>\r\n                Novo Cargo e Posição\r\n              </Button>,\r\n            ]}\r\n            centered\r\n            closable\r\n          />\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            onOk={handleOk}\r\n            onCancel={handleWage}\r\n            okText=\"% de ajuste salarial\"\r\n            cancelText=\"Novo Salário\"\r\n            visible={enaModal}\r\n            okButtonProps={{ type: \"primary\" }}\r\n            cancelButtonProps={{ type: \"primary\" }}\r\n            centered\r\n            closable\r\n          />\r\n\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            visible={enaModalEnquad}\r\n            footer={[\r\n              <Button type=\"primary\" onClick={handleOk}>\r\n                % de Ajuste Salarial\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleWage}>\r\n                Novo Salário\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleCancel}>\r\n                Novo Cargo e Posição\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleScale}>\r\n                Nova Jornada de Trabalho\r\n              </Button>,\r\n            ]}\r\n            width={900}\r\n            closable\r\n          />\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  DatePicker,\r\n  Checkbox,\r\n  Tooltip,\r\n  notification,\r\n  Button,\r\n} from \"antd\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\n\r\nexport default function ContainerStructuralMoviment(props) {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"movimentType\", value: \"salarial\" },\r\n    { name: \"company\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"costCenter\", value: \"\" },\r\n    { name: \"manager\", value: \"\" },\r\n    { name: \"workplace\", value: \"\" },\r\n    { name: \"syndicate\", value: \"\" },\r\n    { name: \"workstation\", value: \"\" },\r\n    { name: \"transfJuridica\", value: false },\r\n    { name: \"branch\", value: false },\r\n    { name: \"CostCent\", value: false },\r\n    { name: \"hierarchy\", value: false },\r\n    { name: \"workloc\", value: false },\r\n    { name: \"sind\", value: false },\r\n    { name: \"postW\", value: false },\r\n    { name: \"movimentDate\", value: false },\r\n  ]);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const notificationBranchSind = () => {\r\n    notification.open({\r\n      message: \"Atenção Erro no preenchimento\",\r\n      description:\r\n        \"Cada Filial esta ligada a um sindicato. Assim, não pode fazer alteração dos dois ao mesmo tempo \",\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const ChangeCheck = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  const tableWarningStr = (title, descript) => {\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    notification.open({\r\n      message: title,\r\n      description: descript,\r\n      btn,\r\n      key,\r\n      ...styleNote,\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset\r\n        hidden={\r\n          props.mode === \"estrutural\" || fields[0].value === \"estrutural\"\r\n            ? false\r\n            : true\r\n        }\r\n      >\r\n        <legend>Movimentação</legend>\r\n\r\n        <Form\r\n          form={form}\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 10 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            setFields(allFields);\r\n          }}\r\n          name=\"structuralMoviment\"\r\n        >\r\n          <div className=\"warningPanel\">\r\n            <ul>\r\n              <li>\r\n                <p>\r\n                  As solicitações de movimentação estrutural devem ser\r\n                  requiridas e aprovadas até o dia 5 para entrar em vigência no\r\n                  mesmo mês. Após essa data, entrarão em vigência no mês\r\n                  seguinte.\r\n                </p>\r\n              </li>\r\n\r\n              <p>\r\n                <Checkbox>Declaro que li todas as regras acima.</Checkbox>\r\n              </p>\r\n            </ul>\r\n          </div>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"movimentType\"} label={\"Tipo de Movimentação\"}>\r\n                <Select\r\n                  placeholder=\"Selecione Movimentação\"\r\n                  defaultValue=\"salarial\"\r\n                  bordered\r\n                >\r\n                  <Select.Option value=\"salarial\">Salarial</Select.Option>\r\n                  <Select.Option value=\"estrutural\">Estrutural</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Tooltip\r\n                title=\"Selecione a empresa\"\r\n                trigger={fields[8].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"company\"}\r\n                  label={\"Empresa\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[8].value,\r\n                      message: \"Obrigatório selecionar a empresa\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Empresa\"\r\n                    defaultValue=\"Tabajara\"\r\n                    disabled={fields[8].value ? false : true}\r\n                  >\r\n                    <Select.Option value=\"telurio\">Telurio</Select.Option>\r\n                    <Select.Option value=\"estroncio\">Estrôncio</Select.Option>\r\n                    <Select.Option value=\"tabajara\">Tabajara</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Ao selecionar a filial automaticamente será alterado o sindicato\"\r\n                trigger={fields[9].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"subsidiary\"}\r\n                  label={\"Filial\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[9].value && !fields[13].value,\r\n                      message: \"Obrigatório selecionar uma filial\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Filial\"\r\n                    disabled={\r\n                      fields[9].value && !fields[13].value ? false : true\r\n                    }\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Somente poderá escolher entre os centros de custo que a filial está cadastrada.\"\r\n                trigger={fields[10].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"costCenter\"}\r\n                  label={\"Centro de Custo\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[10].value,\r\n                      message: \"Obrigatório selecionar um centro de custo\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Centro de Custo\"\r\n                    disabled={fields[10].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o Gestor\"\r\n                trigger={fields[11].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"manager\"}\r\n                  label={\"Gestor\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[11].value,\r\n                      message: \"Obrigatório selecionar um dos gestores\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Gestor\"\r\n                    disabled={fields[11].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o local de Trabalho\"\r\n                trigger={fields[12].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workplace\"}\r\n                  label={\"Local de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[12].value,\r\n                      message: \"Obrigatório selecionar local de trabalho\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Local de Trabalho\"\r\n                    disabled={fields[12].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Somente pode selecionar o sindicatos que estão relacionado com a filial\"\r\n                trigger={fields[13].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"syndicate\"}\r\n                  label={\"Sindicato\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[13].value && !fields[11].value,\r\n                      message: \"Obrigatório selecionar sindicato\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Sindicato\"\r\n                    disabled={\r\n                      fields[13].value && !fields[11].value ? false : true\r\n                    }\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o posto de trabalho\"\r\n                trigger={fields[14].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workstation\"}\r\n                  label={\"Posto de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[14].value,\r\n                      message: \"Obrigatório selecionar posto de trabalho\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Posto de Trabalho\"\r\n                    disabled={fields[14].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <fieldset className=\"modo-box\">\r\n                <legend>Modalidade</legend>\r\n                <Form.Item\r\n                  name={\"transfJuridica\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Transferência Juridica</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"branch\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        const branchValue = getFieldValue(\"sind\");\r\n                        console.log(value + \"  \" + branchValue);\r\n                        if (value && branchValue) {\r\n                          notificationBranchSind();\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Sindicato e Filial não podem ser movimentadas juntas\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Row>\r\n                    <Checkbox onChange={ChangeCheck}>Filial</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"CostCent\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Centro de Custo</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"hierarchy\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Hierarquia</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name={\"workloc\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Local de Trabalho</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"sind\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        const branchValue = getFieldValue(\"branch\");\r\n                        if (value && branchValue) {\r\n                          notificationBranchSind();\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Sindicato e Filial não podem ser movimentadas juntas\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Sindicato</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"postW\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Posto de Trabalho</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n              </fieldset>\r\n              <Form.Item\r\n                name={\"movimentDate\"}\r\n                label={\"Data da Movimentação \"}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message:\r\n                      \"Obrigatório o preenchimento da data de movimentação\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (value) {\r\n                        const data = new Date();\r\n                        if (data.getMonth() <= value._d.getMonth()) {\r\n                          if (value._d.getDate() <= 5) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações de movimentação salarial devem ser requiridas e aprovadas até o dia 5 para entrar em vigência no mesmo mês. Após essa data, entrarão em vigência no mês seguinte.\";\r\n                            tableWarningStr(title, description);\r\n                          } else if (\r\n                            value._d.getDate() > 5 &&\r\n                            value._d.getDate() <= 20\r\n                          ) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"Para entrar em vigor no mês seguinte, as solicitações devem ser feitas após dia 5 e antes do dia 20, inclusive sendo aprovadas até o dia 20. Caso contrário, somente entrarão em vigência no mês subsequente.\";\r\n                            tableWarningStr(title, description);\r\n                          } else {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações entrarão em vigência no mês subsequente.\";\r\n                            tableWarningStr(title, description);\r\n                          }\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\"Data não pode ser em mês retroativo\")\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"Obrigatório o preenchimento da data de movimentação\"\r\n                          )\r\n                        );\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nfunction ContainerObservation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"approver\", value: \"\" },\r\n  ]);\r\n\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      usu: \"\",\r\n      dateTime: \"\",\r\n      role: \"\",\r\n      description: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nome\",\r\n      dataIndex: \"usu\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data/Hora\",\r\n      dataIndex: \"dateTime\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Papel\",\r\n      dataIndex: \"paper\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Observações\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  interface obsItem {\r\n    key: string;\r\n    usu: string;\r\n    dateTime: string;\r\n    role: string;\r\n    description: string;\r\n  }\r\n\r\n  const onFinish = (values: string) => {\r\n    const now = new Date();\r\n    const newObs: obsItem = {\r\n      key: count.toString(),\r\n      usu: values[\"approver\"],\r\n      dateTime: now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }),\r\n      role: \"\",\r\n      description: values[\"descriptionApp\"],\r\n    };\r\n\r\n    setCount((prev) => prev + 1);\r\n    setDataSource((prev) => {\r\n      return [newObs, ...prev];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Observações</legend>\r\n        <Form\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                name={\"approver\"}\r\n                label={\"Aprovador\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input style={{ marginLeft: \"25px\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Form.Item labelAlign=\"right\">\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Gravar\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Tooltip title=\"Campo opcional para acrescentar observações. Após digitar pressionar tecla 'Gravar'.\">\r\n            <Form.Item\r\n              name={\"descriptionApp\"}\r\n              label={\"Observações\"}\r\n              labelAlign=\"left\"\r\n              labelCol={{ span: 4 }}\r\n            >\r\n              <Input.TextArea showCount maxLength={150} />\r\n            </Form.Item>\r\n          </Tooltip>\r\n          <Form.Item label={\"Histórico\"} labelAlign=\"left\">\r\n            <Table dataSource={dataSource} columns={columns}></Table>\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContainerObservation;\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerMovimentHistory from \"../containers/containersMoviment/containerMovimentHistory\";\r\nimport ContainerSalaryMoviment from \"../containers/containersMoviment/containerSalaryMoviment\";\r\nimport ContainerStructuralMoviment from \"../containers/containersMoviment/containerStructuralMoviment\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport { Form } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function FormPageMovimentation() {\r\n  const [selectMode, setSelectMode] = useState(\"salarial\");\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <ContainerIdentify />\r\n        <ContainerEmployee />\r\n        <ContainerMovimentHistory />\r\n        <Form.Provider\r\n          onFormChange={(name, { changedFields, forms }) => {\r\n            if (\r\n              name === \"salarialMoviment\" &&\r\n              changedFields[0].name[0] === \"movimentType\"\r\n            ) {\r\n              const { structuralMoviment } = forms;\r\n              structuralMoviment.setFieldsValue({\r\n                movimentType: changedFields[0].value,\r\n              });\r\n            } else if (\r\n              name === \"structuralMoviment\" &&\r\n              changedFields[0].name[0] === \"movimentType\"\r\n            ) {\r\n              const { salarialMoviment } = forms;\r\n              salarialMoviment.setFieldsValue({\r\n                movimentType: changedFields[0].value,\r\n              });\r\n            }\r\n            setSelectMode(changedFields[0].value);\r\n          }}\r\n        >\r\n          <ContainerSalaryMoviment mode={selectMode} />\r\n          <ContainerStructuralMoviment mode={selectMode} />\r\n        </Form.Provider>\r\n        <ContainerObservation />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport FormPageMovimentation from \"./layoutPage/FormPageMovimentation\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormPageMovimentation />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}