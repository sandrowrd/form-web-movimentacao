{"version":3,"sources":["controlers/services/queryRequest.ts","controlers/services/userRequest.ts","containers/containersCommonFile/containerIdentify.tsx","containers/containersCommonFile/containeEmployee.tsx","containers/containersMoviment/containerMovimentHistory.tsx","containers/containersMoviment/containerSalaryMoviment.tsx","containers/containersMoviment/containerStructuralMoviment.tsx","containers/containersCommonFile/containerObservation.tsx","layoutPage/FormPageMovimentation.tsx","App.tsx","index.tsx"],"names":["QueryRequest","typeReq","url","server","module","service","port","dataSource","debug","consult","type","this","SendRequestWebService","reqType","params","mountUrl","setService","setPort","setTypeReq","headers","Headers","append","window","btoa","username","fetch","createUrlRest","mode","method","body","JSON","stringify","then","resp","Promise","res","rej","option","json","jso","status","ContainerIdentify","useState","name","value","fields","setFields","nomfun","numcad","numemp","tipcol","titred","codcar","dados","setDados","dataUserRequest","useEffect","nomccu","nomfil","supime","labelCol","span","wrapperCol","labelAlign","onFieldsChange","_","allFields","gutter","Item","label","readOnly","ContainerEmployee","Option","Select","rules","required","message","title","allowClear","showSearch","placeholder","optionFilterProp","filterOption","input","children","toLowerCase","indexOf","toLocaleLowerCase","ContainerMovimentHistory","id","before","after","modality","office","wage","columns","dataIndex","key","width","selectOption","enaCar","enaPorcentagem","enaWork","enaRule","enaWage","ContainerSalaryMoviment","props","modalityType","setModalityType","enaModal","setEnaModal","enaModalPromo","setEnaModalPromo","enaModalEnquad","setEnaModalEnquad","Date","Form","useForm","form","funcOption","tableWarning","descript","now","btn","size","onClick","notification","close","styleNote","icon","WarningOutlined","style","color","background","open","description","duration","handleOk","handleWage","handleScale","hidden","onValuesChange","changedValues","allValues","className","defaultValue","onChange","undefined","map","index","getFieldValue","validator","rule","data","console","log","getMonth","_d","getDate","resolve","reject","Error","format","trigger","disabled","warningOnly","min","max","addonAfter","onPressEnter","e","initialSalary","percIncrease","modeSalary","politicIncrease","currentWageAfter","addonBefore","visible","footer","centered","closable","onOk","onCancel","okText","cancelText","okButtonProps","cancelButtonProps","ContainerStructuralMoviment","notificationBranchSind","tableWarningStr","bordered","onFocus","valuePropName","branchValue","ContainerObservation","usu","dateTime","role","setDataSource","count","setCount","onFinish","values","Object","entries","toLocaleString","timeZone","newObs","toString","prev","marginLeft","block","htmlType","TextArea","showCount","maxLength","FormPageMovimentation","selectMode","setSelectMode","Provider","onFormChange","changedFields","forms","structuralMoviment","setFieldsValue","movimentType","salarialMoviment","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04b341a5.chunk.js","sourcesContent":["export class QueryRequest {\r\n  private typeReq = 2;\r\n  private url = \"localhost:8080\";\r\n  private server = \"http://localhost:8080/\";\r\n  private module = \"rubi\";\r\n  private service = \"\";\r\n  private port = \"\";\r\n  private dataSource? = \"\";\r\n  private debug? = false;\r\n  private consult? = \"\";\r\n\r\n  public setTypeReq(type: number) {\r\n    this.typeReq = type;\r\n  }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setServer(server: string) {\r\n    this.server = server;\r\n  }\r\n\r\n  public setModule(module: string) {\r\n    this.module = module;\r\n  }\r\n\r\n  public setService(service: string) {\r\n    this.service = service;\r\n  }\r\n\r\n  public setPort(port: string) {\r\n    this.port = port;\r\n  }\r\n\r\n  public setDataSource(dataSource: string) {\r\n    this.dataSource = dataSource;\r\n  }\r\n\r\n  public setDebug(debug: boolean) {\r\n    this.debug = debug;\r\n  }\r\n\r\n  public setConsult(consult: string) {\r\n    this.consult = consult;\r\n  }\r\n\r\n  //1-Genérica 2-Não Genérica\r\n  public createUrlRest() {\r\n    if (this.typeReq === 1) {\r\n      return (\r\n        \"http://\" + this.url + \"/SXI/GenericConsult?consult=\" + this.consult\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource && this.debug === true) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource +\r\n        \"&DEBUG=true\"\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource\r\n      );\r\n    } else\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port\r\n      );\r\n  }\r\n}\r\n","import { QueryRequest } from \"./queryRequest\";\r\n\r\nexport function sendRequest_old() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  mountUrl.setConsult(\"consulta_solicitante_CVC\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray[3]);\r\n  return responseArray[1];\r\n}\r\n\r\nexport function sendRequest(reqType, service, port, params?) {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = params;\r\n\r\n  xhttp.open(reqType, mountUrl.createUrlRest(), false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function requestCauseDismissal() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  mountUrl.setConsult(\"causa_demissao\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function sendRequestWeb() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const url =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setServer(\"http://localhost:8080/\");\r\n  mountUrl.setModule(\"rubi\");\r\n  mountUrl.setService(\"Altera.Feriado\");\r\n  mountUrl.setPort(\"TesteWeb\");\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = {\r\n    tipoMens: \"Dia\",\r\n  };\r\n\r\n  xhttp.open(\"POST\", url, false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray.causaDemissao;\r\n}\r\n\r\nexport function SendRequestWebService(reqType, service, port, params?) {\r\n  /* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\r\n  const url2 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const url3 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\r\n */\r\n\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  let headers = new Headers();\r\n\r\n  headers.append(\"Accept\", \"application/json;charset=utf-8\");\r\n  headers.append(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  headers.append(\"user\", \"senior\");\r\n\r\n  let response = fetch(mountUrl.createUrlRest(), {\r\n    mode: \"cors\",\r\n    method: \"post\",\r\n    headers: headers,\r\n    body: JSON.stringify(params),\r\n  }).then((resp) => {\r\n    let promise = new Promise((res, rej) => {\r\n      let option = resp.json().then((jso) => {\r\n        return jso;\r\n      });\r\n      if (resp.status === 200) {\r\n        res(option);\r\n      } else {\r\n        rej(\"erro\");\r\n      }\r\n    });\r\n    /* Retorna o valor dentro da [PromiseResult] */\r\n    return promise;\r\n  });\r\n\r\n  //console.log(response);\r\n  return response;\r\n}\r\n","import { Input, Form, Row, Col } from \"antd\";\r\nimport \"./container.css\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nexport let userAprover: any = {\r\n  nomfun: \"\",\r\n  numcad: \"\",\r\n  numemp: \"\",\r\n  tipcol: \"\",\r\n  titred: \"\",\r\n  codcar: \"\",\r\n};\r\n\r\nexport default function ContainerIdentify() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"fullname\", value: \"\" },\r\n    { name: \"registry\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"office\", value: \"\" },\r\n    { name: \"boss\", value: \"\" },\r\n  ]);\r\n\r\n  const [dados, setDados] = useState<any>([\r\n    {\r\n      nomfun: \"\",\r\n      numcad: \"\",\r\n      numemp: \"\",\r\n      tipcol: \"\",\r\n      titred: \"\",\r\n      codcar: \"\",\r\n    },\r\n  ]);\r\n\r\n  const paramName = {\r\n    nomfun: \"\",\r\n  };\r\n\r\n  const dataUserRequest = SendRequestWebService(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.rescisao\",\r\n    \"GetDadosColaborador\",\r\n    paramName\r\n  );\r\n\r\n  useEffect(() => {\r\n    dataUserRequest.then((resp: any) => {\r\n      setDados({\r\n        ...dados,\r\n        nomfun: resp.nomfun,\r\n        numcad: resp.numcad,\r\n        numemp: resp.numemp,\r\n        tipcol: resp.tipcol,\r\n        titred: resp.titred,\r\n        codcar: resp.codcar,\r\n      });\r\n      setFields([\r\n        ...fields,\r\n        { name: [\"fullname\"], value: resp.nomfun },\r\n        { name: [\"registry\"], value: resp.numcad },\r\n        { name: [\"subsidiary\"], value: resp.nomccu },\r\n        { name: [\"office\"], value: resp.nomfil },\r\n        { name: [\"boss\"], value: resp.supime },\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  userAprover = {\r\n    nomfun: dados.nomfun,\r\n    numcad: dados.numcad,\r\n    numemp: dados.numemp,\r\n    tipcol: dados.tipcol,\r\n    titred: dados.titred,\r\n    codcar: dados.codcar,\r\n  };\r\n\r\n  //console.log(userAprover);\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Identificação do Solicitante</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"fullname\"} label={\"Nome Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"registry\"} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"office\"} label={\"Cargo Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"subsidiary\"} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"boss\"} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Select, Table, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\n\r\nexport let infoColab = {\r\n  nomfun: \"\",\r\n  numcad: \"\",\r\n  numemp: \"\",\r\n  tipcol: \"\",\r\n  titred: \"\",\r\n  codcar: \"\",\r\n};\r\n\r\nexport default function ContainerEmployee() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: [\"registryEmployee\"], value: \"\" },\r\n    { name: [\"positionemployee\"], value: \"\" },\r\n    { name: [\"subsidiaryEmployee\"], value: \"\" },\r\n    { name: [\"bossEmployee\"], value: \"\" },\r\n    { name: [\"custCenter\"], value: \"\" },\r\n  ]);\r\n\r\n  function ChooseColab(value) {\r\n    let paramNameEmp = {\r\n      nomfun: value[0].value,\r\n    };\r\n\r\n    const response = SendRequestWebService(\r\n      \"POST\",\r\n      \"br.com.cvc.wf.rescisao\",\r\n      \"GetDadosColaborador\",\r\n      paramNameEmp\r\n    );\r\n\r\n    response.then((resp: any) => {\r\n      infoColab.nomfun = resp.nomfun;\r\n      infoColab.numcad = resp.numcad;\r\n      infoColab.numemp = resp.numemp;\r\n      infoColab.tipcol = resp.tipcol;\r\n      infoColab.titred = resp.titred;\r\n      infoColab.codcar = resp.codcar;\r\n\r\n      setFields([\r\n        ...fields,\r\n        { name: [\"registryEmployee\"], value: resp.numcad },\r\n        { name: [\"positionemployee\"], value: resp.titred },\r\n        { name: [\"subsidiaryEmployee\"], value: resp.nomfil },\r\n        { name: [\"bossEmployee\"], value: resp.supime },\r\n        { name: [\"custCenter\"], value: resp.nomccu },\r\n      ]);\r\n    });\r\n\r\n    console.log(infoColab);\r\n  }\r\n\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações do Colaborador</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            setFields(allFields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"nameEmployee\"]}\r\n                label={\"Colaborador\"}\r\n                rules={[\r\n                  { required: true },\r\n                  { message: \"Obrigatório selecionar o colaborador.\" },\r\n                ]}\r\n              >\r\n                <Tooltip title=\"Selecione o nome do colaborador\">\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Selecione Colaborador\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option?.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLocaleLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    <Option value=\"Adriana Conceição\">Adriana Conceição</Option>\r\n                    <Option value=\"Roberto Mattos\">Roberto Mattos</Option>\r\n                    <Option value=\"Maria Eduarda Freitas\">\r\n                      Maria Eduarda Freitas\r\n                    </Option>\r\n                    <Option value=\"Tadeu Carvalho\">Tadeu Carvalho</Option>\r\n                  </Select>\r\n                </Tooltip>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"registryEmployee\"]} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"positionemployee\"]}\r\n                label={\"Cargo Colaborador\"}\r\n              >\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"subsidiaryEmployee\"]} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"bossEmployee\"]} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"custCenter\"]} label={\"Centro de Custo\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"localWork\"]} label={\"Posto de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"salary\"]} label={\"Salário Atual\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"workHours\"]} label={\"Jornada de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\n\r\nexport default function ContainerMovimentHistory() {\r\n  const data = [\r\n    {\r\n      id: \"583336\",\r\n      before: \"01/11/21\",\r\n      after: \"Atual\",\r\n      modality: \"Dissídio Coletivo\",\r\n      office: \"Analista de Crédito e cobrança\",\r\n      wage: \"R$ 6215,00\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Vigência De\",\r\n      dataIndex: \"before\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Vigência Para\",\r\n      dataIndex: \"after\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Motivo/Modalidade\",\r\n      dataIndex: \"modality\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n\r\n    {\r\n      title: \"Salário\",\r\n      dataIndex: \"wage\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <fieldset>\r\n      <legend>Histórico das Movimentações do Colaborador</legend>\r\n      <Table dataSource={data} columns={columns}></Table>\r\n    </fieldset>\r\n  );\r\n}\r\n","import {\r\n  Input,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  DatePicker,\r\n  Checkbox,\r\n  InputNumber,\r\n  Modal,\r\n  notification,\r\n  Button,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\nimport { promises } from \"dns\";\r\n//import { sendRequest } from \"../controlers/services/userRequest\";\r\n\r\nlet selectOption = {\r\n  enaCar: true,\r\n  enaPorcentagem: true,\r\n  enaWork: true,\r\n  enaRule: false,\r\n  enaWage: true,\r\n};\r\n\r\nexport default function ContainerSalaryMoviment(props) {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"movimentType\", value: \"salarial\" },\r\n    { name: \"modality\", value: \"\" },\r\n    { name: \"movimentDateStr\", value: \"\" },\r\n    { name: \"officeDestiny\", value: \"\" },\r\n    { name: \"percentage\", value: \"\" },\r\n    { name: \"workingDay\", value: \"\" },\r\n    { name: \"startSalary\", value: 1000 },\r\n    { name: \"finalSalary\", value: 2500 },\r\n  ]);\r\n\r\n  const [modalityType, setModalityType] = useState(selectOption);\r\n  const [enaModal, setEnaModal] = useState(false);\r\n  const [enaModalPromo, setEnaModalPromo] = useState(false);\r\n  const [enaModalEnquad, setEnaModalEnquad] = useState(false);\r\n  const dateNow = new Date();\r\n  const [form] = Form.useForm();\r\n  const modalityTypeSalary = [\r\n    \"Promoção\",\r\n    \"Promoção escalonada\",\r\n    \"Mérito\",\r\n    \"Enquadramento\",\r\n    \"Incorporação de verbas\",\r\n    \"Alteração de carga horária\",\r\n    \"Função\",\r\n    \"Ajuste de alvo\",\r\n    \"Mudança de cargo sem reajuste salarial\",\r\n    \"Processo seletivo interno\",\r\n  ];\r\n\r\n  const funcOption = (option: string) => {\r\n    if (option === \"\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"percentage\") {\r\n      if (fields[0].value > 1000) {\r\n        selectOption = {\r\n          enaPorcentagem: false,\r\n          enaCar: true,\r\n          enaWork: true,\r\n          enaRule: true,\r\n          enaWage: true,\r\n        };\r\n      } else {\r\n        selectOption = {\r\n          enaPorcentagem: false,\r\n          enaCar: true,\r\n          enaWork: true,\r\n          enaRule: true,\r\n          enaWage: true,\r\n        };\r\n      }\r\n    } else if (option === \"escala\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: false,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"role\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: false,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"wage\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: false,\r\n      };\r\n    }\r\n    //console.log(selectOption);\r\n    //console.log(modalityType);\r\n  };\r\n\r\n  const chooseMode = (value) => {\r\n    if (value === undefined) {\r\n      funcOption(\"\");\r\n    } else if (value === \"Ajuste de alvo\") {\r\n      funcOption(\"percentage\");\r\n    } else if (value === \"Promoção\" || value === \"Processo seletivo interno\") {\r\n      setEnaModalPromo(true);\r\n    } else if (\r\n      value === \"Mérito\" ||\r\n      value === \"Promoção escalonada\" ||\r\n      value === \"Incorporação de verbas\" ||\r\n      value === \"Alteração de carga horária\"\r\n    ) {\r\n      setEnaModal(true);\r\n    } else if (\r\n      value === \"Função\" ||\r\n      value === \"Mudança de cargo sem reajuste salarial\"\r\n    ) {\r\n      funcOption(\"role\");\r\n    } else if (value === \"Enquadramento\") {\r\n      setEnaModalEnquad(true);\r\n    }\r\n\r\n    //console.log(selectOption);\r\n    //console.log(value);\r\n    //console.log(updateAllValues);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setModalityType(selectOption);\r\n    //console.log(modalityType);\r\n  }, [selectOption]);\r\n\r\n  const tableWarning = (title, descript) => {\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    notification.open({\r\n      message: title,\r\n      description: descript,\r\n      btn,\r\n      key,\r\n      ...styleNote,\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  const politicIncrease = () => {\r\n    const currentWage = 800;\r\n    const initialSalary = form.getFieldValue([\"startSalary\"]);\r\n    const percIncrease = form.getFieldValue([\"percentage\"]);\r\n    const modeSalary = form.getFieldValue([\"modality\"]);\r\n\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    const title = \"Política da empresa\";\r\n    const rangePromo = \", permitido aumento entre 5% a 30%. Favor corrigir.\";\r\n    const rangeMerito = \", permitido aumento entre 5% a 20%. Favor corrigir.\";\r\n\r\n    if (currentWage > initialSalary) {\r\n      if (\r\n        modeSalary === \"Promoção\" ||\r\n        modeSalary === \"Promoção escalonada\" ||\r\n        modeSalary === \"Processo seletivo interno\" ||\r\n        modeSalary === \"Incorporação de verbas\" ||\r\n        modeSalary === \"Ajuste de alvo\" ||\r\n        modeSalary === \"Processo seletivo interno\"\r\n      ) {\r\n        if (percIncrease < 5) {\r\n          const description =\r\n            \"Porcentagem abaixo da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangePromo;\r\n          tableWarning(title, description);\r\n\r\n          return;\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangePromo;\r\n          tableWarning(title, description);\r\n          return;\r\n        }\r\n      } else if (modeSalary === \"Mérito\") {\r\n        if (percIncrease < 5) {\r\n          const description =\r\n            \"Porcentagem abaixo da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangeMerito;\r\n          tableWarning(title, description);\r\n          return;\r\n        } else if (percIncrease > 20) {\r\n          const description =\r\n            \"Porcentagem acima da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangeMerito;\r\n          tableWarning(title, description);\r\n          return;\r\n        }\r\n      }\r\n    } else if (currentWage < initialSalary) {\r\n      if (\r\n        modeSalary === \"Promoção\" ||\r\n        modeSalary === \"Promoção escalonada\" ||\r\n        modeSalary === \"Processo seletivo interno\" ||\r\n        modeSalary === \"Incorporação de verbas\" ||\r\n        modeSalary === \"Ajuste de alvo\" ||\r\n        modeSalary === \"Processo seletivo interno\"\r\n      ) {\r\n        if (percIncrease < 5) {\r\n          const description = \"Porcentagem abaixo da política da empresa. \";\r\n          tableWarning(title, description);\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima de 30% será efetivado em 2 parcelas sendo a primeiro de 30% e o restante será efetivado após 90 dias. \";\r\n          tableWarning(title, description);\r\n        }\r\n      } else if (modeSalary === \"Mérito\") {\r\n        if (percIncrease < 5) {\r\n          const description = \"Porcentagem abaixo da política da empresa. \";\r\n          tableWarning(title, description);\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima de 20% será efetivado em 2 parcelas sendo a primeiro de 20% e o restante será efetivado após 90 dias. \";\r\n          tableWarning(title, description);\r\n        }\r\n      }\r\n    }\r\n    //console.log(initialSalary);\r\n    //console.log(modeSalary);\r\n    //console.log(modeSalary === \"Mérito\");\r\n  };\r\n\r\n  const handlePercentage = (e) => {\r\n    //console.log(e);\r\n    //console.log(fields[6].value);\r\n    const currentWage = 1200;\r\n    const initialSalary = fields[0].value;\r\n    const percIncrease = e;\r\n    let percHigherInicialSalary = 0;\r\n    //console.log(form.getFieldValue([\"modality\"]));\r\n    politicIncrease();\r\n    const currentWageAfter = currentWage * (percIncrease / 100 + 1);\r\n    if (currentWageAfter > initialSalary) {\r\n      percHigherInicialSalary = (currentWageAfter / initialSalary - 1) * 100;\r\n    }\r\n    //console.log(modalityType);\r\n    //console.log(currentWageAfter);\r\n    //console.log(percHigherInicialSalary);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    funcOption(\"percentage\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    funcOption(\"role\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleWage = () => {\r\n    funcOption(\"wage\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleScale = () => {\r\n    funcOption(\"escala\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset\r\n        hidden={\r\n          props.mode === \"salarial\" || fields[0].value === \"salarial\"\r\n            ? false\r\n            : true\r\n        }\r\n      >\r\n        <legend>Movimentação</legend>\r\n        <Form\r\n          labelCol={{ span: 12 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onValuesChange={(changedValues, allValues) => {\r\n            //chooseMode(changedValues.modality, allValues);\r\n            //console.log(allValues);\r\n            //console.log(props);\r\n            //console.log(changedValues.modality);\r\n          }}\r\n          onFieldsChange={(_, allFields) => {\r\n            setModalityType(selectOption);\r\n            //setFields(updateAllValues);\r\n            setFields(allFields);\r\n            //console.log(fields);\r\n            //console.log(modalityType);\r\n            //console.log(fields[\"movimentType\"]);\r\n          }}\r\n          name=\"salarialMoviment\"\r\n          form={form}\r\n        >\r\n          <div className=\"warningPanel\">\r\n            <ul>\r\n              <li>\r\n                <p>\r\n                  As solicitações de movimentação salarial devem ser requiridas\r\n                  e aprovadas até o dia 5 para entrar em vigência no mesmo mês.\r\n                  Após essa data, entrarão em vigência no mês seguinte.\r\n                </p>\r\n              </li>\r\n              <li>\r\n                <p>\r\n                  Para entrar em vigor no mês seguinte, as solicitações devem\r\n                  ser feitas após dia 5 e antes do dia 20, inclusive sendo\r\n                  aprovadas até o dia 20. Caso contrário, somente entrarão em\r\n                  vigência no mês subsequente.\r\n                </p>\r\n              </li>\r\n              <li\r\n                hidden={\r\n                  fields[1].value === \"Promoção\" ||\r\n                  fields[1].value === \"Promoção escalonada\" ||\r\n                  fields[1].value === \"Enquadramento\" ||\r\n                  fields[1].value === \"Ajuste de alvo\" ||\r\n                  fields[1].value === \"Processo seletivo interno\"\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                <p>\r\n                  A porcentagem permitida para o colaborador acima da faixa\r\n                  salarial inicial é entre 5% a 30%.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Mérito\" ? false : true}>\r\n                <p>\r\n                  A porcentagem permitida para o colaborador acima da faixa\r\n                  salarial inicial é entre 5% a 20%.\r\n                </p>\r\n              </li>\r\n              <li\r\n                hidden={\r\n                  fields[1].value === \"Promoção\" ||\r\n                  fields[1].value === \"Promoção escalonada\" ||\r\n                  fields[1].value === \"Enquadramento\" ||\r\n                  fields[1].value === \"Ajuste de alvo\" ||\r\n                  fields[1].value === \"Processo seletivo interno\"\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                <p>\r\n                  Caso esteja abaixo da faixa salarial poderá ter aumento\r\n                  superior a 30% que será parcelado em 2, sendo a primeira de\r\n                  30% e a segunda com o valor restante após 90 dias.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Mérito\" ? false : true}>\r\n                <p>\r\n                  Caso esteja abaixo da faixa salarial poderá ter aumento\r\n                  superior a 20% que será parcelado em 2, sendo a primeira de\r\n                  20% e a segunda com o valor restante após 90 dias.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Promoção\" ? false : true}>\r\n                <p>\r\n                  Caso a proposta salarial seja superior a Política de Salários\r\n                  da empresa utilizar a opção de Promoção Escalonada\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Enquadramento\" ? false : true}>\r\n                <p>\r\n                  Se houver ajuste de Jornada o valor hora poderá ser afetado.\r\n                </p>\r\n              </li>\r\n              <p>\r\n                <Checkbox>Declaro que li todas as regras acima.</Checkbox>\r\n              </p>\r\n            </ul>\r\n          </div>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item name={\"movimentType\"} label={\"Tipo de Movimentação\"}>\r\n                <Select\r\n                  placeholder=\"Selecione Movimentação\"\r\n                  defaultValue=\"salarial\"\r\n                >\r\n                  <Select.Option value=\"salarial\">Salarial</Select.Option>\r\n                  <Select.Option value=\"estrutural\">Estrutural</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip title=\"Selecionar a modadalidade de movimentação salarial.\">\r\n                <Form.Item name={\"modality\"} label={\"Modalidade\"}>\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Modalidade\"\r\n                    onChange={chooseMode}\r\n                  >\r\n                    {modalityTypeSalary.map((value, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={value}>\r\n                          {value}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item\r\n                name={\"movimentDateStr\"}\r\n                label={\"Data da Movimentação \"}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (value) {\r\n                        const data = new Date();\r\n                        console.log(data);\r\n                        console.log(data.getMonth());\r\n                        //console.log(value._d.getMonth());\r\n                        //console.log(data.getMonth() < value._d.getMonth());\r\n                        if (data.getMonth() <= value._d.getMonth()) {\r\n                          console.log(data.getDate());\r\n                          if (value._d.getDate() <= 5) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações de movimentação salarial devem ser requiridas e aprovadas até o dia 5 para entrar em vigência no mesmo mês. Após essa data, entrarão em vigência no mês seguinte.\";\r\n                            tableWarning(title, description);\r\n                          } else if (\r\n                            value._d.getDate() > 5 &&\r\n                            value._d.getDate() <= 20\r\n                          ) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"Para entrar em vigor no mês seguinte, as solicitações devem ser feitas após dia 5 e antes do dia 20, inclusive sendo aprovadas até o dia 20. Caso contrário, somente entrarão em vigência no mês subsequente.\";\r\n                            tableWarning(title, description);\r\n                          } else {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações entrarão em vigência no mês subsequente.\";\r\n                            tableWarning(title, description);\r\n                          }\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          //console.log(\"rejeitado\");\r\n                          return Promise.reject(\r\n                            new Error(\"Data não pode ser em mês retroativo\")\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"Obrigatório o preenchimento da data de movimentação\"\r\n                          )\r\n                        );\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip\r\n                title=\"Selecione o cargo/posto de destino.\"\r\n                trigger={modalityType.enaCar ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"officeDestiny\"}\r\n                  label={\"Cargo/Posto Destino\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaCar ? false : true,\r\n                      message:\r\n                        \"Obrigatório selecionar o cargo/posto de destino\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Posto de Destino\"\r\n                    disabled={modalityType.enaCar}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Tooltip\r\n                title=\"O valor da porcentagem deve estar dentro da política da empresa.\"\r\n                trigger={modalityType.enaPorcentagem ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"percentage\"}\r\n                  label={\"Porcentagem \"}\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        if (getFieldValue(\"startSalary\") > 800) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject({\r\n                          warningOnly: true,\r\n                          message: \"Salario acima da faixa salarial inicial ok\",\r\n                        });\r\n                      },\r\n                    }),\r\n                    {\r\n                      required: modalityType.enaPorcentagem ? false : true,\r\n                      message:\r\n                        \"Obrigatório o preenchimento do valor da porcentagem\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    placeholder=\"Porcentagem\"\r\n                    min={0}\r\n                    max={100}\r\n                    disabled={modalityType.enaPorcentagem}\r\n                    //formatter={(value) => `${value}%`}\r\n                    addonAfter=\"%\"\r\n                    onPressEnter={handlePercentage}\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip\r\n                title=\"Selecione a Jornada de trabalho.\"\r\n                trigger={modalityType.enaWork ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workingDay\"}\r\n                  label={\"Jornada de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaWork ? false : true,\r\n                      message:\r\n                        \"Obrigatório o preenchimento do valor da porcentagem\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Jornada de Trabalho\"\r\n                    disabled={modalityType.enaWork}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Tooltip\r\n                title=\"Informe o valor do novo salário\"\r\n                trigger={modalityType.enaWage ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"wage\"}\r\n                  label={\"Salário\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaWage ? false : true,\r\n                      message: \"Obrigatório o preenchimento do novo salário\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        const finalWage = getFieldValue(\"finalSalary\");\r\n                        if (value <= finalWage) {\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Valor não permitido. Valor acima da faixa salarial final. Favor corrigir.\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    disabled={modalityType.enaWage}\r\n                    addonBefore=\"R$\"\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item name={\"startSalary\"} label={\"Faixa Salarial Inicial\"}>\r\n                <InputNumber readOnly addonBefore=\"R$\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Form.Item name={\"finalSalary\"} label={\"Faixa Salarial Final\"}>\r\n                <InputNumber readOnly addonBefore=\"R$\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            visible={enaModalPromo}\r\n            footer={[\r\n              <Button type=\"primary\" onClick={handleOk}>\r\n                % de ajuste salarial\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleWage}>\r\n                Novo salário\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleScale}>\r\n                Novo Cargo e Posição\r\n              </Button>,\r\n            ]}\r\n            centered\r\n            closable\r\n          />\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            onOk={handleOk}\r\n            onCancel={handleWage}\r\n            okText=\"% de ajuste salarial\"\r\n            cancelText=\"Novo Salário\"\r\n            visible={enaModal}\r\n            okButtonProps={{ type: \"primary\" }}\r\n            cancelButtonProps={{ type: \"primary\" }}\r\n            centered\r\n            closable\r\n          />\r\n\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            visible={enaModalEnquad}\r\n            footer={[\r\n              <Button type=\"primary\" onClick={handleOk}>\r\n                % de Ajuste Salarial\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleWage}>\r\n                Novo Salário\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleCancel}>\r\n                Novo Cargo e Posição\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleScale}>\r\n                Nova Jornada de Trabalho\r\n              </Button>,\r\n            ]}\r\n            width={900}\r\n            closable\r\n          />\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  DatePicker,\r\n  Checkbox,\r\n  Tooltip,\r\n  notification,\r\n  Button,\r\n} from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { FormInstance } from \"antd/es/form\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\n//import { sendRequest } from \"../controlers/services/userRequest\";\r\n\r\nexport default function ContainerStructuralMoviment(props) {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"movimentType\", value: \"salarial\" },\r\n    { name: \"company\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"costCenter\", value: \"\" },\r\n    { name: \"manager\", value: \"\" },\r\n    { name: \"workplace\", value: \"\" },\r\n    { name: \"syndicate\", value: \"\" },\r\n    { name: \"workstation\", value: \"\" },\r\n    { name: \"transfJuridica\", value: false },\r\n    { name: \"branch\", value: false },\r\n    { name: \"CostCent\", value: false },\r\n    { name: \"hierarchy\", value: false },\r\n    { name: \"workloc\", value: false },\r\n    { name: \"sind\", value: false },\r\n    { name: \"postW\", value: false },\r\n    { name: \"movimentDate\", value: false },\r\n  ]);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const checkModality = [\r\n    { label: \"Transferência Juridica\", value: \"transfJuridica\" },\r\n    { label: \"Centro de Custo\", value: \"CostCent\" },\r\n    { label: \"Hierarquia\", value: \"hierarchy\" },\r\n    { label: \"Filial\", value: \"branch\" },\r\n    { label: \"Sindicato\", value: \"sind\" },\r\n    { label: \"Posto de Trabalho\", value: \"postW\" },\r\n    { label: \"Local de Trabalho\", value: \"workloc\" },\r\n  ];\r\n\r\n  //console.log(enaFieldset);\r\n\r\n  const notificationBranchSind = () => {\r\n    notification.open({\r\n      message: \"Atenção Erro no preenchimento\",\r\n      description:\r\n        \"Cada Filial esta ligada a um sindicato. Assim, não pode fazer alteração dos dois ao mesmo tempo \",\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const ChangeCheck = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  const tableWarningStr = (title, descript) => {\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    notification.open({\r\n      message: title,\r\n      description: descript,\r\n      btn,\r\n      key,\r\n      ...styleNote,\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset\r\n        hidden={\r\n          props.mode === \"estrutural\" || fields[0].value === \"estrutural\"\r\n            ? false\r\n            : true\r\n        }\r\n      >\r\n        <legend>Movimentação</legend>\r\n\r\n        <Form\r\n          form={form}\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 10 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            //setFields(update);\r\n            setFields(allFields);\r\n            console.log(allFields);\r\n            //setStructureMove(allFields);\r\n            //console.log(structureMove);\r\n            console.log(fields);\r\n          }}\r\n          name=\"structuralMoviment\"\r\n        >\r\n          <div className=\"warningPanel\">\r\n            <ul>\r\n              <li>\r\n                <p>\r\n                  As solicitações de movimentação estrutural devem ser\r\n                  requiridas e aprovadas até o dia 5 para entrar em vigência no\r\n                  mesmo mês. Após essa data, entrarão em vigência no mês\r\n                  seguinte.\r\n                </p>\r\n              </li>\r\n\r\n              <p>\r\n                <Checkbox>Declaro que li todas as regras acima.</Checkbox>\r\n              </p>\r\n            </ul>\r\n          </div>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"movimentType\"} label={\"Tipo de Movimentação\"}>\r\n                <Select\r\n                  placeholder=\"Selecione Movimentação\"\r\n                  defaultValue=\"salarial\"\r\n                  bordered\r\n                  onFocus={(value) => {\r\n                    console.log(value);\r\n                  }}\r\n                >\r\n                  <Select.Option value=\"salarial\">Salarial</Select.Option>\r\n                  <Select.Option value=\"estrutural\">Estrutural</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Tooltip\r\n                title=\"Selecione a empresa\"\r\n                trigger={fields[8].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"company\"}\r\n                  label={\"Empresa\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[8].value,\r\n                      message: \"Obrigatório selecionar a empresa\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Empresa\"\r\n                    defaultValue=\"Tabajara\"\r\n                    disabled={fields[8].value ? false : true}\r\n                  >\r\n                    <Select.Option value=\"telurio\">Telurio</Select.Option>\r\n                    <Select.Option value=\"estroncio\">Estrôncio</Select.Option>\r\n                    <Select.Option value=\"tabajara\">Tabajara</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Ao selecionar a filial automaticamente será alterado o sindicato\"\r\n                trigger={fields[9].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"subsidiary\"}\r\n                  label={\"Filial\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[9].value && !fields[13].value,\r\n                      message: \"Obrigatório selecionar uma filial\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Filial\"\r\n                    disabled={\r\n                      fields[9].value && !fields[13].value ? false : true\r\n                    }\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Somente poderá escolher entre os centros de custo que a filial está cadastrada.\"\r\n                trigger={fields[10].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"costCenter\"}\r\n                  label={\"Centro de Custo\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[10].value,\r\n                      message: \"Obrigatório selecionar um centro de custo\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Centro de Custo\"\r\n                    disabled={fields[10].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o Gestor\"\r\n                trigger={fields[11].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"manager\"}\r\n                  label={\"Gestor\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[11].value,\r\n                      message: \"Obrigatório selecionar um dos gestores\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Gestor\"\r\n                    disabled={fields[11].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o local de Trabalho\"\r\n                trigger={fields[12].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workplace\"}\r\n                  label={\"Local de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[12].value,\r\n                      message: \"Obrigatório selecionar local de trabalho\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Local de Trabalho\"\r\n                    disabled={fields[12].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Somente pode selecionar o sindicatos que estão relacionado com a filial\"\r\n                trigger={fields[13].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"syndicate\"}\r\n                  label={\"Sindicato\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[13].value && !fields[11].value,\r\n                      message: \"Obrigatório selecionar sindicato\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Sindicato\"\r\n                    disabled={\r\n                      fields[13].value && !fields[11].value ? false : true\r\n                    }\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o posto de trabalho\"\r\n                trigger={fields[14].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workstation\"}\r\n                  label={\"Posto de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[14].value,\r\n                      message: \"Obrigatório selecionar posto de trabalho\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Posto de Trabalho\"\r\n                    disabled={fields[14].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <fieldset className=\"modo-box\">\r\n                <legend>Modalidade</legend>\r\n                <Form.Item\r\n                  name={\"transfJuridica\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Transferência Juridica</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"branch\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        const branchValue = getFieldValue(\"sind\");\r\n                        console.log(value + \"  \" + branchValue);\r\n                        if (value && branchValue) {\r\n                          notificationBranchSind();\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Sindicato e Filial não podem ser movimentadas juntas\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Row>\r\n                    <Checkbox onChange={ChangeCheck}>Filial</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"CostCent\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Centro de Custo</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"hierarchy\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Hierarquia</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name={\"workloc\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Local de Trabalho</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"sind\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        const branchValue = getFieldValue(\"branch\");\r\n                        console.log(value + \"  \" + branchValue);\r\n                        if (value && branchValue) {\r\n                          notificationBranchSind();\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Sindicato e Filial não podem ser movimentadas juntas\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Sindicato</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"postW\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Posto de Trabalho</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n              </fieldset>\r\n              <Form.Item\r\n                name={\"movimentDate\"}\r\n                label={\"Data da Movimentação \"}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message:\r\n                      \"Obrigatório o preenchimento da data de movimentação\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (value) {\r\n                        const data = new Date();\r\n\r\n                        //console.log(data);\r\n                        //console.log(data.getMonth());\r\n                        //console.log(value._d.getMonth());\r\n                        //console.log(data.getMonth() < value._d.getMonth());\r\n                        if (data.getMonth() <= value._d.getMonth()) {\r\n                          console.log(\"aceito\");\r\n                          if (value._d.getDate() <= 5) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações de movimentação salarial devem ser requiridas e aprovadas até o dia 5 para entrar em vigência no mesmo mês. Após essa data, entrarão em vigência no mês seguinte.\";\r\n                            tableWarningStr(title, description);\r\n                          } else if (\r\n                            value._d.getDate() > 5 &&\r\n                            value._d.getDate() <= 20\r\n                          ) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"Para entrar em vigor no mês seguinte, as solicitações devem ser feitas após dia 5 e antes do dia 20, inclusive sendo aprovadas até o dia 20. Caso contrário, somente entrarão em vigência no mês subsequente.\";\r\n                            tableWarningStr(title, description);\r\n                          } else {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações entrarão em vigência no mês subsequente.\";\r\n                            tableWarningStr(title, description);\r\n                          }\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          console.log(\"rejeitado\");\r\n                          return Promise.reject(\r\n                            new Error(\"Data não pode ser em mês retroativo\")\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"Obrigatório o preenchimento da data de movimentação\"\r\n                          )\r\n                        );\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { userAprover } from \"./containerIdentify\";\r\nimport { infoColab } from \"./containeEmployee\";\r\n//import { sendRequest } from \"../controlers/services/userRequest\";\r\n\r\n/* const onFinish = (value) => {\r\n  let today = new Date();\r\n\r\n    let paramNameEmp = {\r\n    nomapr: userAprover.nomfun,\r\n    nomafa: infoColab.nomfun,\r\n    nompap: \"RH Rescisão\",\r\n    tpcola: userAprover.tipcol,\r\n    tpcolb: infoColab.tipcol,\r\n    nmcada: userAprover.numcad,\r\n    nmcadb: infoColab.numcad,\r\n    nmempa: userAprover.numemp,\r\n    nmempb: infoColab.numemp,\r\n    cdcara: userAprover.codcar,\r\n    cdcarb: infoColab.codcar,\r\n    ttreda: userAprover.titred,\r\n    ttredb: infoColab.titred,\r\n    datobs: today,\r\n    desobs: value.descriptionApp,\r\n  }; \r\n\r\n    const response = sendRequest(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.rescisao\",\r\n    \"SetHistoricoObs\",\r\n    paramNameEmp\r\n  ); \r\n  //console.log(paramNameEmp);\r\n  //console.log(userAprover);\r\n  //console.log(infoColab);\r\n}; */\r\n\r\nfunction ContainerObservation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"approver\", value: \"\" },\r\n  ]);\r\n\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      usu: \"\",\r\n      dateTime: \"\",\r\n      role: \"\",\r\n      description: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nome\",\r\n      dataIndex: \"usu\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data/Hora\",\r\n      dataIndex: \"dateTime\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Papel\",\r\n      dataIndex: \"paper\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Observações\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  interface obsItem {\r\n    key: string;\r\n    usu: string;\r\n    dateTime: string;\r\n    role: string;\r\n    description: string;\r\n  }\r\n\r\n  const onFinish = (values: string) => {\r\n    console.log(values);\r\n    console.log(values[\"approver\"]);\r\n    console.log(Object.entries(values));\r\n    const now = new Date();\r\n    console.log(now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }));\r\n    const newObs: obsItem = {\r\n      key: count.toString(),\r\n      usu: values[\"approver\"],\r\n      dateTime: now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }),\r\n      role: \"\",\r\n      description: values[\"descriptionApp\"],\r\n    };\r\n\r\n    setCount((prev) => prev + 1);\r\n    setDataSource((prev) => {\r\n      return [newObs, ...prev];\r\n    });\r\n\r\n    console.log(newObs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Observações</legend>\r\n        <Form\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                name={\"approver\"}\r\n                label={\"Aprovador\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input style={{ marginLeft: \"25px\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Form.Item labelAlign=\"right\">\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Gravar\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Tooltip title=\"Campo opcional para acrescentar observações. Após digitar pressionar tecla 'Gravar'.\">\r\n            <Form.Item\r\n              name={\"descriptionApp\"}\r\n              label={\"Observações\"}\r\n              labelAlign=\"left\"\r\n              labelCol={{ span: 4 }}\r\n            >\r\n              <Input.TextArea showCount maxLength={150} />\r\n            </Form.Item>\r\n          </Tooltip>\r\n          <Form.Item label={\"Histórico\"} labelAlign=\"left\">\r\n            <Table dataSource={dataSource} columns={columns}></Table>\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContainerObservation;\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerMovimentHistory from \"../containers/containersMoviment/containerMovimentHistory\";\r\nimport ContainerSalaryMoviment from \"../containers/containersMoviment/containerSalaryMoviment\";\r\nimport ContainerStructuralMoviment from \"../containers/containersMoviment/containerStructuralMoviment\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport { Form } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { user } from \"@seniorsistemas/senior-platform-data\";\r\n\r\nexport default function FormPageMovimentation() {\r\n  const [selectMode, setSelectMode] = useState(\"salarial\");\r\n\r\n  console.log(\"Pagina Carregada sem dados\");\r\n  /* user.getToken().then((v) => {\r\n    console.log(v);\r\n  });\r\n  user.getAuthHeader().then((aut) => console.log(aut));\r\n  user.getUserData().then((data) => console.log(data)); */\r\n  return (\r\n    <>\r\n      <div>\r\n        <ContainerIdentify />\r\n        <ContainerEmployee />\r\n        <ContainerMovimentHistory />\r\n        <Form.Provider\r\n          onFormChange={(name, { changedFields, forms }) => {\r\n            if (\r\n              name === \"salarialMoviment\" &&\r\n              changedFields[0].name[0] === \"movimentType\"\r\n            ) {\r\n              const { structuralMoviment } = forms;\r\n              //console.log(\"Salarial: \" + changedFields[0].value);\r\n              structuralMoviment.setFieldsValue({\r\n                movimentType: changedFields[0].value,\r\n              });\r\n            } else if (\r\n              name === \"structuralMoviment\" &&\r\n              changedFields[0].name[0] === \"movimentType\"\r\n            ) {\r\n              const { salarialMoviment } = forms;\r\n              //console.log(\"Estrutural: \" + changedFields[0].value);\r\n              salarialMoviment.setFieldsValue({\r\n                movimentType: changedFields[0].value,\r\n              });\r\n            }\r\n            setSelectMode(changedFields[0].value);\r\n\r\n            //console.log(changedFields);\r\n            //console.log(changedFields[0].name);\r\n            //console.log(name);\r\n            //console.log(forms);\r\n          }}\r\n        >\r\n          <ContainerSalaryMoviment mode={selectMode} />\r\n          <ContainerStructuralMoviment mode={selectMode} />\r\n        </Form.Provider>\r\n        <ContainerObservation />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport ContainerIdentify from \"./containers/containersCommonFile/containerIdentify\";\nimport ContainerEmployee from \"./containers/containersCommonFile/containeEmployee\";\nimport \"./App.css\";\nimport ContainerRecission from \"./containers/containersRescission/containerRecission\";\nimport ContainerObservation from \"./containers/containersCommonFile/containerObservation\";\nimport ContainerMovimentHistory from \"./containers/containersMoviment/containerMovimentHistory\";\nimport ContainerSalaryMoviment from \"./containers/containersMoviment/containerSalaryMoviment\";\nimport ContainerStructuralMoviment from \"./containers/containersMoviment/containerStructuralMoviment\";\nimport ContainerInfoVacation from \"./containers/containersVacation/containerInfoVacation\";\nimport ContainerVacation from \"./containers/containersVacation/containerVacation\";\nimport ContainerStability from \"./containers/containersRescission/containerStability\";\nimport FormPageMovimentation from \"./layoutPage/FormPageMovimentation\";\nimport FormPageRescission from \"./layoutPage/FormPageRescission\";\nimport FormPageVacation from \"./layoutPage/FormPageVacation\";\nimport ContainerMoviment from \"./containers/containersMoviment/containerMoviment\";\nimport LayoutPage from \"./layoutPage/LayoutPage\";\nimport Teste from \"./containers/teste\";\nimport RoutePages from \"./controlers/routes/routes\";\nimport { user } from \"@seniorsistemas/senior-platform-data\";\nimport Demo from \"./layoutPage/LayoutPage\";\nimport { Layout, Tabs, Input, Form } from \"antd\";\n\n//const { Header, Footer, Content } = Layout;\n\n//const { TabPane } = Tabs;\n\nfunction App() {\n  /*  user.getToken().then((v) => {\n    console.log(v);\n  });\n  user.getAuthHeader().then((aut) => console.log(aut));\n  user.getUserData().then((data) => console.log(data)); */\n  return (\n    <div className=\"App\">\n      <FormPageMovimentation />\n    </div>\n  );\n}\n\n/* const carro = [\"Painel 01\", \"Painel 02\", \"Painel 03\", \"Painel 04\"];\n\nfunction App() {\n  return (\n    <Tabs tabPosition=\"top\" defaultActiveKey=\"2\">\n      <TabPane tab=\"Tab 1\" key=\"1\">\n        <FormPageMovimentation />\n      </TabPane>\n      <TabPane tab=\"Tab 2\" key=\"2\">\n        <FormPageMovimentation />\n      </TabPane>\n      <TabPane tab=\"Tab 3\" key=\"3\">\n        <ContainerObservation />\n      </TabPane>\n    </Tabs>\n  );\n} */\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\n//import LayoutPage from \"./layoutPage/LayoutPage\"; /*\n//import axios from \"axios\";\n/* Inicialmente tem que ser importado o pacote antd.css */\n//import \"antd/dist/antd.css\";\n/* Método para configuração do ant design */\n//import { ConfigProvider } from \"antd\";\n/* Configuração do idioma para portugues Brasil */\n//import ptBR from \"antd/lib/locale/pt_BR\";\n//import { TstArray } from \"./controlers/services/testes\";\n/* import {\n  requestCauseDismissal,\n  SendRequestWebService,\n} from \"./controlers/services/userRequest\"; */\n\n/* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\nconst url2 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\n\nconst url3 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\nconst url4 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=com.senior.g5.rh.fp.consultarColaborador&port=ConsultarColaborador&DEBUG=true\";\n\nconst username = \"senior\";\nconst password = \"senior\"; */\n\n/* const config = {\n  withCredentials: true,\n  method: \"post\",\n  headers: {\n    Origin: \"*\",\n    \"Content-Type\": \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  },\n  auth: {\n    username: \"senior\",\n    password: \"senior\",\n  },\n  responseEncoding: \"utf8\",\n  params: {},\n}; */\n\n/* let headers = new Headers();\n\nheaders.append(\"Accept\", \"application/json;charset=utf-8\");\nheaders.append(\n  \"Authorization\",\n  \"Basic \" + window.btoa(username + \":\" + password)\n);\nheaders.append(\"user\", \"senior\");\n\n\n/* fetch(url2, {\n  mode: \"cors\",\n  method: \"post\",\n  /* headers: {\n    Accept: \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  }, \n  headers: headers,\n}).then((res) => {\n  return res.json().then((jso) => {\n    console.log(jso.causaDemissao);\n  });\n}); */\n\n/* fetch(url3, {\n  mode: \"cors\",\n  method: \"post\", */\n/* headers: {\n    Accept: \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  }, */\n/* headers: headers,\n  body: JSON.stringify({\n    tipoMens: \"Dia\",\n  }),\n}).then((res) => {\n  return res.json().then((json) => {\n    console.log(json.mensagem);\n  });\n}); */\n\n/* axios\n  .post(url2, {\n    crossorigin: true,\n    headers: {\n      common: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        WithCredentials: true,\n        \"Access-Control-Allow-Origin\": \"*\",\n        user: \"senior\",\n        Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n      },\n      Origin: \"*\",\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n      user: \"senior\",\n    },\n    //user: \"senior\",\n  })\n  .then((res) => {\n    console.log(res);\n  });\n\n  \n \n\naxios.defaults.headers.post[\"user\"] = \"senior\"; */\n\n/* const array = SendRequestWebService();\nvar array2 = [\"\"];\n\nconsole.log(array);\narray.then((cause: any) => {\n  \n  for (var val in cause) {\n    console.log(cause[val].desDem);\n    \n    array2.push(cause[val].desDem);\n  }\n  \n});\nconsole.log(array2); */\n\n/* const xhttp = new XMLHttpRequest();\nconst param = {\n  tipoMens: \"Dia\",\n};\n\nxhttp.open(\"POST\", url3, false);\nxhttp.setRequestHeader(\n  \"Authorization\",\n  \"Basic \" + window.btoa(username + \":\" + password)\n);\nxhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\nxhttp.setRequestHeader(\"user\", \"senior\");\n\nxhttp.send(JSON.stringify(param));\nlet responseArray = JSON.parse(xhttp.responseText);\n\nconsole.log(responseArray.mensagem); */\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}