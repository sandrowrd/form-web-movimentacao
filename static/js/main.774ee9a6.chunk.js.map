{"version":3,"sources":["controlers/services/queryRequest.ts","controlers/services/userRequest.ts","containers/containersCommonFile/containerIdentify.tsx","containers/containersCommonFile/containeEmployee.tsx","containers/containersMoviment/containerMovimentHistory.tsx","containers/containersMoviment/containerSalaryMoviment.tsx","containers/containersMoviment/containerStructuralMoviment.tsx","containers/containersCommonFile/containerObservation.tsx","layoutPage/FormPageMovimentation.tsx","containers/containersRescission/containerRecission.tsx","containers/containersRescission/containerStability.tsx","containers/containersRescission/containerAnalyzeRH.tsx","containers/containersRescission/containerBenefits.tsx","containers/containersRescission/containerRemuneration.tsx","containers/containersRescission/containerFundsRHRescission.tsx","layoutPage/FormPageRescission.tsx","containers/containersVacation/containerInfoVacation.tsx","containers/containersVacation/containerVacation.tsx","layoutPage/FormPageVacation.tsx","layoutPage/LayoutPage.tsx","controlers/routes/routes.tsx","App.tsx","index.tsx"],"names":["QueryRequest","typeReq","url","server","module","service","port","dataSource","debug","consult","type","this","SendRequestWebService","reqType","params","mountUrl","setService","setPort","setTypeReq","headers","Headers","append","window","btoa","username","fetch","createUrlRest","mode","method","body","JSON","stringify","then","resp","Promise","res","rej","option","json","jso","status","ContainerIdentify","useState","name","value","fields","setFields","nomfun","numcad","numemp","tipcol","titred","codcar","dados","setDados","dataUserRequest","useEffect","nomccu","nomfil","supime","labelCol","span","wrapperCol","labelAlign","onFieldsChange","_","allFields","gutter","Item","label","readOnly","ContainerEmployee","Option","Select","rules","required","message","title","allowClear","showSearch","placeholder","optionFilterProp","filterOption","input","children","toLowerCase","indexOf","toLocaleLowerCase","ContainerMovimentHistory","id","before","after","modality","office","wage","columns","dataIndex","key","width","selectOption","enaCar","enaPorcentagem","enaWork","enaRule","enaWage","ContainerSalaryMoviment","props","modalityType","setModalityType","enaModal","setEnaModal","enaModalPromo","setEnaModalPromo","enaModalEnquad","setEnaModalEnquad","Date","Form","useForm","form","funcOption","tableWarning","descript","now","btn","size","onClick","notification","close","styleNote","icon","WarningOutlined","style","color","background","open","description","duration","handleOk","handleWage","handleScale","hidden","onValuesChange","changedValues","allValues","className","defaultValue","onChange","undefined","map","index","getFieldValue","validator","rule","data","console","log","getMonth","_d","getDate","resolve","reject","Error","format","trigger","disabled","warningOnly","min","max","addonAfter","onPressEnter","e","initialSalary","percIncrease","modeSalary","politicIncrease","currentWageAfter","addonBefore","visible","footer","centered","closable","onOk","onCancel","okText","cancelText","okButtonProps","cancelButtonProps","ContainerStructuralMoviment","notificationBranchSind","tableWarningStr","bordered","onFocus","valuePropName","branchValue","ContainerObservation","usu","dateTime","role","setDataSource","count","setCount","onFinish","values","Object","entries","toLocaleString","timeZone","newObs","toString","prev","marginLeft","block","htmlType","TextArea","showCount","maxLength","FormPageMovimentation","selectMode","setSelectMode","Provider","onFormChange","changedFields","forms","structuralMoviment","setFieldsValue","movimentType","salarialMoviment","arrayCausa","array","xhttp","XMLHttpRequest","param","setRequestHeader","send","parse","responseText","sendRequest","i","keys","causaDemissao","length","push","desDem","TypeWarning","dias","upFields","ContainerRecission","tooltip","setTooltip","certificateCauseDead","certificateAskDemission","aviso","causa","UploadOutlined","weekDay","getDay","day","unCheckedChildren","checkedChildren","ContainerStability","dateBegin","dateEnd","ContainerAnalyzeRH","ContainerBenefits","setVisible","descriptionBenef","amount","total","ModalForm","addItem","submit","render","text","record","DeleteOutlined","fontSize","filter","item","onDelete","onFormFinish","newData","typeItem","descriptItem","amountItem","totalItem","num","marginBottom","ContainerRemuneration","ContainerFundsRHRescission","FormPageRescission","ContainerInfoVacation","hasData","rowSelection","tableConfig","EditOutlined","allfields","Group","buttonStyle","Button","pagination","dateIn","salary13","allowence","advance","part","onRow","event","tableInfo","onRowSelection","ContainerVacation","fieldsForm","setFieldsForm","enaRow01","enaRow02","enaRow","setEnaRow","dayVacation","textData","textDays","warningNote","date","days","setDate","toLocaleDateString","validatorDate","dayweek","today","diff","Math","abs","getTime","ceil","timeMin","refDate","parseInt","validatorDays","diffDays","set","show01","show02","changeValues","getFieldsValue","vacationDays","daysVacation01","xs","sm","md","lg","justify","placement","datEnd","vacationDay","dateEndVacation01","testDate","validDate","totalDays","daysVacation02","datEndP1","dateEndVacation02","dateBeginVacation02","daysVacation03","dateEndVacation03","dateBeginVacation03","dateBegin02","diasP2","datEndP2","daysVac03","dataInP3","datEndP3","ena","dateBeginP3","dateBeguinVacation03","daysVac02","FormPageVacation","showRow","setShowRow","formVacation","moment","Header","Layout","Footer","Content","Title","Typography","TabPane","Tabs","LayoutPage","level","marginTop","tabPosition","defaultActiveKey","tab","direction","href","RoutePages","path","element","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.774ee9a6.chunk.js","sourcesContent":["export class QueryRequest {\r\n  private typeReq = 2;\r\n  private url = \"localhost:8080\";\r\n  private server = \"http://localhost:8080/\";\r\n  private module = \"rubi\";\r\n  private service = \"\";\r\n  private port = \"\";\r\n  private dataSource? = \"\";\r\n  private debug? = false;\r\n  private consult? = \"\";\r\n\r\n  public setTypeReq(type: number) {\r\n    this.typeReq = type;\r\n  }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setServer(server: string) {\r\n    this.server = server;\r\n  }\r\n\r\n  public setModule(module: string) {\r\n    this.module = module;\r\n  }\r\n\r\n  public setService(service: string) {\r\n    this.service = service;\r\n  }\r\n\r\n  public setPort(port: string) {\r\n    this.port = port;\r\n  }\r\n\r\n  public setDataSource(dataSource: string) {\r\n    this.dataSource = dataSource;\r\n  }\r\n\r\n  public setDebug(debug: boolean) {\r\n    this.debug = debug;\r\n  }\r\n\r\n  public setConsult(consult: string) {\r\n    this.consult = consult;\r\n  }\r\n\r\n  //1-Genérica 2-Não Genérica\r\n  public createUrlRest() {\r\n    if (this.typeReq === 1) {\r\n      return (\r\n        \"http://\" + this.url + \"/SXI/GenericConsult?consult=\" + this.consult\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource && this.debug === true) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource +\r\n        \"&DEBUG=true\"\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource\r\n      );\r\n    } else\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port\r\n      );\r\n  }\r\n}\r\n","import { QueryRequest } from \"./queryRequest\";\r\n\r\nexport function sendRequest_old() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  mountUrl.setConsult(\"consulta_solicitante_CVC\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray[3]);\r\n  return responseArray[1];\r\n}\r\n\r\nexport function sendRequest(reqType, service, port, params?) {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = params;\r\n\r\n  xhttp.open(reqType, mountUrl.createUrlRest(), false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function requestCauseDismissal() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  mountUrl.setConsult(\"causa_demissao\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function sendRequestWeb() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const url =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setServer(\"http://localhost:8080/\");\r\n  mountUrl.setModule(\"rubi\");\r\n  mountUrl.setService(\"Altera.Feriado\");\r\n  mountUrl.setPort(\"TesteWeb\");\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = {\r\n    tipoMens: \"Dia\",\r\n  };\r\n\r\n  xhttp.open(\"POST\", url, false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray.causaDemissao;\r\n}\r\n\r\nexport function SendRequestWebService(reqType, service, port, params?) {\r\n  /* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\r\n  const url2 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const url3 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\r\n */\r\n\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  let headers = new Headers();\r\n\r\n  headers.append(\"Accept\", \"application/json;charset=utf-8\");\r\n  headers.append(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  headers.append(\"user\", \"senior\");\r\n\r\n  let response = fetch(mountUrl.createUrlRest(), {\r\n    mode: \"cors\",\r\n    method: \"post\",\r\n    headers: headers,\r\n    body: JSON.stringify(params),\r\n  }).then((resp) => {\r\n    let promise = new Promise((res, rej) => {\r\n      let option = resp.json().then((jso) => {\r\n        return jso;\r\n      });\r\n      if (resp.status === 200) {\r\n        res(option);\r\n      } else {\r\n        rej(\"erro\");\r\n      }\r\n    });\r\n    /* Retorna o valor dentro da [PromiseResult] */\r\n    return promise;\r\n  });\r\n\r\n  //console.log(response);\r\n  return response;\r\n}\r\n","import { Input, Form, Row, Col } from \"antd\";\r\nimport \"./container.css\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nexport let userAprover: any = {\r\n  nomfun: \"\",\r\n  numcad: \"\",\r\n  numemp: \"\",\r\n  tipcol: \"\",\r\n  titred: \"\",\r\n  codcar: \"\",\r\n};\r\n\r\nexport default function ContainerIdentify() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"fullname\", value: \"\" },\r\n    { name: \"registry\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"office\", value: \"\" },\r\n    { name: \"boss\", value: \"\" },\r\n  ]);\r\n\r\n  const [dados, setDados] = useState<any>([\r\n    {\r\n      nomfun: \"\",\r\n      numcad: \"\",\r\n      numemp: \"\",\r\n      tipcol: \"\",\r\n      titred: \"\",\r\n      codcar: \"\",\r\n    },\r\n  ]);\r\n\r\n  const paramName = {\r\n    nomfun: \"\",\r\n  };\r\n\r\n  const dataUserRequest = SendRequestWebService(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.rescisao\",\r\n    \"GetDadosColaborador\",\r\n    paramName\r\n  );\r\n\r\n  useEffect(() => {\r\n    dataUserRequest.then((resp: any) => {\r\n      setDados({\r\n        ...dados,\r\n        nomfun: resp.nomfun,\r\n        numcad: resp.numcad,\r\n        numemp: resp.numemp,\r\n        tipcol: resp.tipcol,\r\n        titred: resp.titred,\r\n        codcar: resp.codcar,\r\n      });\r\n      setFields([\r\n        ...fields,\r\n        { name: [\"fullname\"], value: resp.nomfun },\r\n        { name: [\"registry\"], value: resp.numcad },\r\n        { name: [\"subsidiary\"], value: resp.nomccu },\r\n        { name: [\"office\"], value: resp.nomfil },\r\n        { name: [\"boss\"], value: resp.supime },\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  userAprover = {\r\n    nomfun: dados.nomfun,\r\n    numcad: dados.numcad,\r\n    numemp: dados.numemp,\r\n    tipcol: dados.tipcol,\r\n    titred: dados.titred,\r\n    codcar: dados.codcar,\r\n  };\r\n\r\n  //console.log(userAprover);\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Identificação do Solicitante</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"fullname\"} label={\"Nome Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"registry\"} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"office\"} label={\"Cargo Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"subsidiary\"} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"boss\"} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Select, Table, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\n\r\nexport let infoColab = {\r\n  nomfun: \"\",\r\n  numcad: \"\",\r\n  numemp: \"\",\r\n  tipcol: \"\",\r\n  titred: \"\",\r\n  codcar: \"\",\r\n};\r\n\r\nexport default function ContainerEmployee() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: [\"registryEmployee\"], value: \"\" },\r\n    { name: [\"positionemployee\"], value: \"\" },\r\n    { name: [\"subsidiaryEmployee\"], value: \"\" },\r\n    { name: [\"bossEmployee\"], value: \"\" },\r\n    { name: [\"custCenter\"], value: \"\" },\r\n  ]);\r\n\r\n  function ChooseColab(value) {\r\n    let paramNameEmp = {\r\n      nomfun: value[0].value,\r\n    };\r\n\r\n    const response = SendRequestWebService(\r\n      \"POST\",\r\n      \"br.com.cvc.wf.rescisao\",\r\n      \"GetDadosColaborador\",\r\n      paramNameEmp\r\n    );\r\n\r\n    response.then((resp: any) => {\r\n      infoColab.nomfun = resp.nomfun;\r\n      infoColab.numcad = resp.numcad;\r\n      infoColab.numemp = resp.numemp;\r\n      infoColab.tipcol = resp.tipcol;\r\n      infoColab.titred = resp.titred;\r\n      infoColab.codcar = resp.codcar;\r\n\r\n      setFields([\r\n        ...fields,\r\n        { name: [\"registryEmployee\"], value: resp.numcad },\r\n        { name: [\"positionemployee\"], value: resp.titred },\r\n        { name: [\"subsidiaryEmployee\"], value: resp.nomfil },\r\n        { name: [\"bossEmployee\"], value: resp.supime },\r\n        { name: [\"custCenter\"], value: resp.nomccu },\r\n      ]);\r\n    });\r\n\r\n    console.log(infoColab);\r\n  }\r\n\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações do Colaborador</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            setFields(allFields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"nameEmployee\"]}\r\n                label={\"Colaborador\"}\r\n                rules={[\r\n                  { required: true },\r\n                  { message: \"Obrigatório selecionar o colaborador.\" },\r\n                ]}\r\n              >\r\n                <Tooltip title=\"Selecione o nome do colaborador\">\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Selecione Colaborador\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option?.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLocaleLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    <Option value=\"Adriana Conceição\">Adriana Conceição</Option>\r\n                    <Option value=\"Roberto Mattos\">Roberto Mattos</Option>\r\n                    <Option value=\"Maria Eduarda Freitas\">\r\n                      Maria Eduarda Freitas\r\n                    </Option>\r\n                    <Option value=\"Tadeu Carvalho\">Tadeu Carvalho</Option>\r\n                  </Select>\r\n                </Tooltip>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"registryEmployee\"]} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"positionemployee\"]}\r\n                label={\"Cargo Colaborador\"}\r\n              >\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"subsidiaryEmployee\"]} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"bossEmployee\"]} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"custCenter\"]} label={\"Centro de Custo\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"localWork\"]} label={\"Posto de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"salary\"]} label={\"Salário Atual\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"workHours\"]} label={\"Jornada de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\n\r\nexport default function ContainerMovimentHistory() {\r\n  const data = [\r\n    {\r\n      id: \"583336\",\r\n      before: \"01/11/21\",\r\n      after: \"Atual\",\r\n      modality: \"Dissídio Coletivo\",\r\n      office: \"Analista de Crédito e cobrança\",\r\n      wage: \"R$ 6215,00\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Vigência De\",\r\n      dataIndex: \"before\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Vigência Para\",\r\n      dataIndex: \"after\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Motivo/Modalidade\",\r\n      dataIndex: \"modality\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n\r\n    {\r\n      title: \"Salário\",\r\n      dataIndex: \"wage\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <fieldset>\r\n      <legend>Histórico das Movimentações do Colaborador</legend>\r\n      <Table dataSource={data} columns={columns}></Table>\r\n    </fieldset>\r\n  );\r\n}\r\n","import {\r\n  Input,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  DatePicker,\r\n  Checkbox,\r\n  InputNumber,\r\n  Modal,\r\n  notification,\r\n  Button,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\nimport { promises } from \"dns\";\r\n//import { sendRequest } from \"../controlers/services/userRequest\";\r\n\r\nlet selectOption = {\r\n  enaCar: true,\r\n  enaPorcentagem: true,\r\n  enaWork: true,\r\n  enaRule: false,\r\n  enaWage: true,\r\n};\r\n\r\nexport default function ContainerSalaryMoviment(props) {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"movimentType\", value: \"salarial\" },\r\n    { name: \"modality\", value: \"\" },\r\n    { name: \"movimentDateStr\", value: \"\" },\r\n    { name: \"officeDestiny\", value: \"\" },\r\n    { name: \"percentage\", value: \"\" },\r\n    { name: \"workingDay\", value: \"\" },\r\n    { name: \"startSalary\", value: 1000 },\r\n    { name: \"finalSalary\", value: 2500 },\r\n  ]);\r\n\r\n  const [modalityType, setModalityType] = useState(selectOption);\r\n  const [enaModal, setEnaModal] = useState(false);\r\n  const [enaModalPromo, setEnaModalPromo] = useState(false);\r\n  const [enaModalEnquad, setEnaModalEnquad] = useState(false);\r\n  const dateNow = new Date();\r\n  const [form] = Form.useForm();\r\n  const modalityTypeSalary = [\r\n    \"Promoção\",\r\n    \"Promoção escalonada\",\r\n    \"Mérito\",\r\n    \"Enquadramento\",\r\n    \"Incorporação de verbas\",\r\n    \"Alteração de carga horária\",\r\n    \"Função\",\r\n    \"Ajuste de alvo\",\r\n    \"Mudança de cargo sem reajuste salarial\",\r\n    \"Processo seletivo interno\",\r\n  ];\r\n\r\n  const funcOption = (option: string) => {\r\n    if (option === \"\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"percentage\") {\r\n      if (fields[0].value > 1000) {\r\n        selectOption = {\r\n          enaPorcentagem: false,\r\n          enaCar: true,\r\n          enaWork: true,\r\n          enaRule: true,\r\n          enaWage: true,\r\n        };\r\n      } else {\r\n        selectOption = {\r\n          enaPorcentagem: false,\r\n          enaCar: true,\r\n          enaWork: true,\r\n          enaRule: true,\r\n          enaWage: true,\r\n        };\r\n      }\r\n    } else if (option === \"escala\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: false,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"role\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: false,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: true,\r\n      };\r\n    } else if (option === \"wage\") {\r\n      selectOption = {\r\n        enaPorcentagem: true,\r\n        enaCar: true,\r\n        enaWork: true,\r\n        enaRule: true,\r\n        enaWage: false,\r\n      };\r\n    }\r\n    //console.log(selectOption);\r\n    //console.log(modalityType);\r\n  };\r\n\r\n  const chooseMode = (value) => {\r\n    if (value === undefined) {\r\n      funcOption(\"\");\r\n    } else if (value === \"Ajuste de alvo\") {\r\n      funcOption(\"percentage\");\r\n    } else if (value === \"Promoção\" || value === \"Processo seletivo interno\") {\r\n      setEnaModalPromo(true);\r\n    } else if (\r\n      value === \"Mérito\" ||\r\n      value === \"Promoção escalonada\" ||\r\n      value === \"Incorporação de verbas\" ||\r\n      value === \"Alteração de carga horária\"\r\n    ) {\r\n      setEnaModal(true);\r\n    } else if (\r\n      value === \"Função\" ||\r\n      value === \"Mudança de cargo sem reajuste salarial\"\r\n    ) {\r\n      funcOption(\"role\");\r\n    } else if (value === \"Enquadramento\") {\r\n      setEnaModalEnquad(true);\r\n    }\r\n\r\n    //console.log(selectOption);\r\n    //console.log(value);\r\n    //console.log(updateAllValues);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setModalityType(selectOption);\r\n    //console.log(modalityType);\r\n  }, [selectOption]);\r\n\r\n  const tableWarning = (title, descript) => {\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    notification.open({\r\n      message: title,\r\n      description: descript,\r\n      btn,\r\n      key,\r\n      ...styleNote,\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  const politicIncrease = () => {\r\n    const currentWage = 800;\r\n    const initialSalary = form.getFieldValue([\"startSalary\"]);\r\n    const percIncrease = form.getFieldValue([\"percentage\"]);\r\n    const modeSalary = form.getFieldValue([\"modality\"]);\r\n\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    const title = \"Política da empresa\";\r\n    const rangePromo = \", permitido aumento entre 5% a 30%. Favor corrigir.\";\r\n    const rangeMerito = \", permitido aumento entre 5% a 20%. Favor corrigir.\";\r\n\r\n    if (currentWage > initialSalary) {\r\n      if (\r\n        modeSalary === \"Promoção\" ||\r\n        modeSalary === \"Promoção escalonada\" ||\r\n        modeSalary === \"Processo seletivo interno\" ||\r\n        modeSalary === \"Incorporação de verbas\" ||\r\n        modeSalary === \"Ajuste de alvo\" ||\r\n        modeSalary === \"Processo seletivo interno\"\r\n      ) {\r\n        if (percIncrease < 5) {\r\n          const description =\r\n            \"Porcentagem abaixo da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangePromo;\r\n          tableWarning(title, description);\r\n\r\n          return;\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangePromo;\r\n          tableWarning(title, description);\r\n          return;\r\n        }\r\n      } else if (modeSalary === \"Mérito\") {\r\n        if (percIncrease < 5) {\r\n          const description =\r\n            \"Porcentagem abaixo da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangeMerito;\r\n          tableWarning(title, description);\r\n          return;\r\n        } else if (percIncrease > 20) {\r\n          const description =\r\n            \"Porcentagem acima da política da empresa. Salário acima da faixa inicial salarial\" +\r\n            rangeMerito;\r\n          tableWarning(title, description);\r\n          return;\r\n        }\r\n      }\r\n    } else if (currentWage < initialSalary) {\r\n      if (\r\n        modeSalary === \"Promoção\" ||\r\n        modeSalary === \"Promoção escalonada\" ||\r\n        modeSalary === \"Processo seletivo interno\" ||\r\n        modeSalary === \"Incorporação de verbas\" ||\r\n        modeSalary === \"Ajuste de alvo\" ||\r\n        modeSalary === \"Processo seletivo interno\"\r\n      ) {\r\n        if (percIncrease < 5) {\r\n          const description = \"Porcentagem abaixo da política da empresa. \";\r\n          tableWarning(title, description);\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima de 30% será efetivado em 2 parcelas sendo a primeiro de 30% e o restante será efetivado após 90 dias. \";\r\n          tableWarning(title, description);\r\n        }\r\n      } else if (modeSalary === \"Mérito\") {\r\n        if (percIncrease < 5) {\r\n          const description = \"Porcentagem abaixo da política da empresa. \";\r\n          tableWarning(title, description);\r\n        } else if (percIncrease > 30) {\r\n          const description =\r\n            \"Porcentagem acima de 20% será efetivado em 2 parcelas sendo a primeiro de 20% e o restante será efetivado após 90 dias. \";\r\n          tableWarning(title, description);\r\n        }\r\n      }\r\n    }\r\n    //console.log(initialSalary);\r\n    //console.log(modeSalary);\r\n    //console.log(modeSalary === \"Mérito\");\r\n  };\r\n\r\n  const handlePercentage = (e) => {\r\n    //console.log(e);\r\n    //console.log(fields[6].value);\r\n    const currentWage = 1200;\r\n    const initialSalary = fields[0].value;\r\n    const percIncrease = e;\r\n    let percHigherInicialSalary = 0;\r\n    //console.log(form.getFieldValue([\"modality\"]));\r\n    politicIncrease();\r\n    const currentWageAfter = currentWage * (percIncrease / 100 + 1);\r\n    if (currentWageAfter > initialSalary) {\r\n      percHigherInicialSalary = (currentWageAfter / initialSalary - 1) * 100;\r\n    }\r\n    //console.log(modalityType);\r\n    //console.log(currentWageAfter);\r\n    //console.log(percHigherInicialSalary);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    funcOption(\"percentage\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    funcOption(\"role\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleWage = () => {\r\n    funcOption(\"wage\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  const handleScale = () => {\r\n    funcOption(\"escala\");\r\n    setEnaModal(false);\r\n    setEnaModalEnquad(false);\r\n    setEnaModalPromo(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset\r\n        hidden={\r\n          props.mode === \"salarial\" || fields[0].value === \"salarial\"\r\n            ? false\r\n            : true\r\n        }\r\n      >\r\n        <legend>Movimentação</legend>\r\n        <Form\r\n          labelCol={{ span: 12 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onValuesChange={(changedValues, allValues) => {\r\n            //chooseMode(changedValues.modality, allValues);\r\n            //console.log(allValues);\r\n            //console.log(props);\r\n            //console.log(changedValues.modality);\r\n          }}\r\n          onFieldsChange={(_, allFields) => {\r\n            setModalityType(selectOption);\r\n            //setFields(updateAllValues);\r\n            setFields(allFields);\r\n            //console.log(fields);\r\n            //console.log(modalityType);\r\n            //console.log(fields[\"movimentType\"]);\r\n          }}\r\n          name=\"salarialMoviment\"\r\n          form={form}\r\n        >\r\n          <div className=\"warningPanel\">\r\n            <ul>\r\n              <li>\r\n                <p>\r\n                  As solicitações de movimentação salarial devem ser requiridas\r\n                  e aprovadas até o dia 5 para entrar em vigência no mesmo mês.\r\n                  Após essa data, entrarão em vigência no mês seguinte.\r\n                </p>\r\n              </li>\r\n              <li>\r\n                <p>\r\n                  Para entrar em vigor no mês seguinte, as solicitações devem\r\n                  ser feitas após dia 5 e antes do dia 20, inclusive sendo\r\n                  aprovadas até o dia 20. Caso contrário, somente entrarão em\r\n                  vigência no mês subsequente.\r\n                </p>\r\n              </li>\r\n              <li\r\n                hidden={\r\n                  fields[1].value === \"Promoção\" ||\r\n                  fields[1].value === \"Promoção escalonada\" ||\r\n                  fields[1].value === \"Enquadramento\" ||\r\n                  fields[1].value === \"Ajuste de alvo\" ||\r\n                  fields[1].value === \"Processo seletivo interno\"\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                <p>\r\n                  A porcentagem permitida para o colaborador acima da faixa\r\n                  salarial inicial é entre 5% a 30%.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Mérito\" ? false : true}>\r\n                <p>\r\n                  A porcentagem permitida para o colaborador acima da faixa\r\n                  salarial inicial é entre 5% a 20%.\r\n                </p>\r\n              </li>\r\n              <li\r\n                hidden={\r\n                  fields[1].value === \"Promoção\" ||\r\n                  fields[1].value === \"Promoção escalonada\" ||\r\n                  fields[1].value === \"Enquadramento\" ||\r\n                  fields[1].value === \"Ajuste de alvo\" ||\r\n                  fields[1].value === \"Processo seletivo interno\"\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                <p>\r\n                  Caso esteja abaixo da faixa salarial poderá ter aumento\r\n                  superior a 30% que será parcelado em 2, sendo a primeira de\r\n                  30% e a segunda com o valor restante após 90 dias.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Mérito\" ? false : true}>\r\n                <p>\r\n                  Caso esteja abaixo da faixa salarial poderá ter aumento\r\n                  superior a 20% que será parcelado em 2, sendo a primeira de\r\n                  20% e a segunda com o valor restante após 90 dias.\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Promoção\" ? false : true}>\r\n                <p>\r\n                  Caso a proposta salarial seja superior a Política de Salários\r\n                  da empresa utilizar a opção de Promoção Escalonada\r\n                </p>\r\n              </li>\r\n              <li hidden={fields[1].value === \"Enquadramento\" ? false : true}>\r\n                <p>\r\n                  Se houver ajuste de Jornada o valor hora poderá ser afetado.\r\n                </p>\r\n              </li>\r\n              <p>\r\n                <Checkbox>Declaro que li todas as regras acima.</Checkbox>\r\n              </p>\r\n            </ul>\r\n          </div>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item name={\"movimentType\"} label={\"Tipo de Movimentação\"}>\r\n                <Select\r\n                  placeholder=\"Selecione Movimentação\"\r\n                  defaultValue=\"salarial\"\r\n                >\r\n                  <Select.Option value=\"salarial\">Salarial</Select.Option>\r\n                  <Select.Option value=\"estrutural\">Estrutural</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip title=\"Selecionar a modadalidade de movimentação salarial.\">\r\n                <Form.Item name={\"modality\"} label={\"Modalidade\"}>\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Modalidade\"\r\n                    onChange={chooseMode}\r\n                  >\r\n                    {modalityTypeSalary.map((value, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={value}>\r\n                          {value}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item\r\n                name={\"movimentDateStr\"}\r\n                label={\"Data da Movimentação \"}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (value) {\r\n                        const data = new Date();\r\n                        console.log(data);\r\n                        console.log(data.getMonth());\r\n                        //console.log(value._d.getMonth());\r\n                        //console.log(data.getMonth() < value._d.getMonth());\r\n                        if (data.getMonth() <= value._d.getMonth()) {\r\n                          console.log(data.getDate());\r\n                          if (value._d.getDate() <= 5) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações de movimentação salarial devem ser requiridas e aprovadas até o dia 5 para entrar em vigência no mesmo mês. Após essa data, entrarão em vigência no mês seguinte.\";\r\n                            tableWarning(title, description);\r\n                          } else if (\r\n                            value._d.getDate() > 5 &&\r\n                            value._d.getDate() <= 20\r\n                          ) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"Para entrar em vigor no mês seguinte, as solicitações devem ser feitas após dia 5 e antes do dia 20, inclusive sendo aprovadas até o dia 20. Caso contrário, somente entrarão em vigência no mês subsequente.\";\r\n                            tableWarning(title, description);\r\n                          } else {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações entrarão em vigência no mês subsequente.\";\r\n                            tableWarning(title, description);\r\n                          }\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          //console.log(\"rejeitado\");\r\n                          return Promise.reject(\r\n                            new Error(\"Data não pode ser em mês retroativo\")\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"Obrigatório o preenchimento da data de movimentação\"\r\n                          )\r\n                        );\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip\r\n                title=\"Selecione o cargo/posto de destino.\"\r\n                trigger={modalityType.enaCar ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"officeDestiny\"}\r\n                  label={\"Cargo/Posto Destino\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaCar ? false : true,\r\n                      message:\r\n                        \"Obrigatório selecionar o cargo/posto de destino\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Posto de Destino\"\r\n                    disabled={modalityType.enaCar}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Tooltip\r\n                title=\"O valor da porcentagem deve estar dentro da política da empresa.\"\r\n                trigger={modalityType.enaPorcentagem ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"percentage\"}\r\n                  label={\"Porcentagem \"}\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        if (getFieldValue(\"startSalary\") > 800) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject({\r\n                          warningOnly: true,\r\n                          message: \"Salario acima da faixa salarial inicial ok\",\r\n                        });\r\n                      },\r\n                    }),\r\n                    {\r\n                      required: modalityType.enaPorcentagem ? false : true,\r\n                      message:\r\n                        \"Obrigatório o preenchimento do valor da porcentagem\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    placeholder=\"Porcentagem\"\r\n                    min={0}\r\n                    max={100}\r\n                    disabled={modalityType.enaPorcentagem}\r\n                    //formatter={(value) => `${value}%`}\r\n                    addonAfter=\"%\"\r\n                    onPressEnter={handlePercentage}\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Tooltip\r\n                title=\"Selecione a Jornada de trabalho.\"\r\n                trigger={modalityType.enaWork ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workingDay\"}\r\n                  label={\"Jornada de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaWork ? false : true,\r\n                      message:\r\n                        \"Obrigatório o preenchimento do valor da porcentagem\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Jornada de Trabalho\"\r\n                    disabled={modalityType.enaWork}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Tooltip\r\n                title=\"Informe o valor do novo salário\"\r\n                trigger={modalityType.enaWage ? \"focus\" : \"hover\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"wage\"}\r\n                  label={\"Salário\"}\r\n                  rules={[\r\n                    {\r\n                      required: modalityType.enaWage ? false : true,\r\n                      message: \"Obrigatório o preenchimento do novo salário\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        const finalWage = getFieldValue(\"finalSalary\");\r\n                        if (value <= finalWage) {\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Valor não permitido. Valor acima da faixa salarial final. Favor corrigir.\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    disabled={modalityType.enaWage}\r\n                    addonBefore=\"R$\"\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={11}>\r\n              <Form.Item name={\"startSalary\"} label={\"Faixa Salarial Inicial\"}>\r\n                <InputNumber readOnly addonBefore=\"R$\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={13}>\r\n              <Form.Item name={\"finalSalary\"} label={\"Faixa Salarial Final\"}>\r\n                <InputNumber readOnly addonBefore=\"R$\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            visible={enaModalPromo}\r\n            footer={[\r\n              <Button type=\"primary\" onClick={handleOk}>\r\n                % de ajuste salarial\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleWage}>\r\n                Novo salário\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleScale}>\r\n                Novo Cargo e Posição\r\n              </Button>,\r\n            ]}\r\n            centered\r\n            closable\r\n          />\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            onOk={handleOk}\r\n            onCancel={handleWage}\r\n            okText=\"% de ajuste salarial\"\r\n            cancelText=\"Novo Salário\"\r\n            visible={enaModal}\r\n            okButtonProps={{ type: \"primary\" }}\r\n            cancelButtonProps={{ type: \"primary\" }}\r\n            centered\r\n            closable\r\n          />\r\n\r\n          <Modal\r\n            title=\"Escolha uma das opções.\"\r\n            visible={enaModalEnquad}\r\n            footer={[\r\n              <Button type=\"primary\" onClick={handleOk}>\r\n                % de Ajuste Salarial\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleWage}>\r\n                Novo Salário\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleCancel}>\r\n                Novo Cargo e Posição\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={handleScale}>\r\n                Nova Jornada de Trabalho\r\n              </Button>,\r\n            ]}\r\n            width={900}\r\n            closable\r\n          />\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  DatePicker,\r\n  Checkbox,\r\n  Tooltip,\r\n  notification,\r\n  Button,\r\n} from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { FormInstance } from \"antd/es/form\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\n//import { sendRequest } from \"../controlers/services/userRequest\";\r\n\r\nexport default function ContainerStructuralMoviment(props) {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"movimentType\", value: \"salarial\" },\r\n    { name: \"company\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"costCenter\", value: \"\" },\r\n    { name: \"manager\", value: \"\" },\r\n    { name: \"workplace\", value: \"\" },\r\n    { name: \"syndicate\", value: \"\" },\r\n    { name: \"workstation\", value: \"\" },\r\n    { name: \"transfJuridica\", value: false },\r\n    { name: \"branch\", value: false },\r\n    { name: \"CostCent\", value: false },\r\n    { name: \"hierarchy\", value: false },\r\n    { name: \"workloc\", value: false },\r\n    { name: \"sind\", value: false },\r\n    { name: \"postW\", value: false },\r\n    { name: \"movimentDate\", value: false },\r\n  ]);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const checkModality = [\r\n    { label: \"Transferência Juridica\", value: \"transfJuridica\" },\r\n    { label: \"Centro de Custo\", value: \"CostCent\" },\r\n    { label: \"Hierarquia\", value: \"hierarchy\" },\r\n    { label: \"Filial\", value: \"branch\" },\r\n    { label: \"Sindicato\", value: \"sind\" },\r\n    { label: \"Posto de Trabalho\", value: \"postW\" },\r\n    { label: \"Local de Trabalho\", value: \"workloc\" },\r\n  ];\r\n\r\n  //console.log(enaFieldset);\r\n\r\n  const notificationBranchSind = () => {\r\n    notification.open({\r\n      message: \"Atenção Erro no preenchimento\",\r\n      description:\r\n        \"Cada Filial esta ligada a um sindicato. Assim, não pode fazer alteração dos dois ao mesmo tempo \",\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const ChangeCheck = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  const tableWarningStr = (title, descript) => {\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirmar\r\n      </Button>\r\n    );\r\n\r\n    const styleNote = {\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n    };\r\n\r\n    notification.open({\r\n      message: title,\r\n      description: descript,\r\n      btn,\r\n      key,\r\n      ...styleNote,\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset\r\n        hidden={\r\n          props.mode === \"estrutural\" || fields[0].value === \"estrutural\"\r\n            ? false\r\n            : true\r\n        }\r\n      >\r\n        <legend>Movimentação</legend>\r\n\r\n        <Form\r\n          form={form}\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 10 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            //setFields(update);\r\n            setFields(allFields);\r\n            console.log(allFields);\r\n            //setStructureMove(allFields);\r\n            //console.log(structureMove);\r\n            console.log(fields);\r\n          }}\r\n          name=\"structuralMoviment\"\r\n        >\r\n          <div className=\"warningPanel\">\r\n            <ul>\r\n              <li>\r\n                <p>\r\n                  As solicitações de movimentação estrutural devem ser\r\n                  requiridas e aprovadas até o dia 5 para entrar em vigência no\r\n                  mesmo mês. Após essa data, entrarão em vigência no mês\r\n                  seguinte.\r\n                </p>\r\n              </li>\r\n\r\n              <p>\r\n                <Checkbox>Declaro que li todas as regras acima.</Checkbox>\r\n              </p>\r\n            </ul>\r\n          </div>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"movimentType\"} label={\"Tipo de Movimentação\"}>\r\n                <Select\r\n                  placeholder=\"Selecione Movimentação\"\r\n                  defaultValue=\"salarial\"\r\n                  bordered\r\n                  onFocus={(value) => {\r\n                    console.log(value);\r\n                  }}\r\n                >\r\n                  <Select.Option value=\"salarial\">Salarial</Select.Option>\r\n                  <Select.Option value=\"estrutural\">Estrutural</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Tooltip\r\n                title=\"Selecione a empresa\"\r\n                trigger={fields[8].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"company\"}\r\n                  label={\"Empresa\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[8].value,\r\n                      message: \"Obrigatório selecionar a empresa\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Empresa\"\r\n                    defaultValue=\"Tabajara\"\r\n                    disabled={fields[8].value ? false : true}\r\n                  >\r\n                    <Select.Option value=\"telurio\">Telurio</Select.Option>\r\n                    <Select.Option value=\"estroncio\">Estrôncio</Select.Option>\r\n                    <Select.Option value=\"tabajara\">Tabajara</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Ao selecionar a filial automaticamente será alterado o sindicato\"\r\n                trigger={fields[9].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"subsidiary\"}\r\n                  label={\"Filial\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[9].value && !fields[13].value,\r\n                      message: \"Obrigatório selecionar uma filial\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Filial\"\r\n                    disabled={\r\n                      fields[9].value && !fields[13].value ? false : true\r\n                    }\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Somente poderá escolher entre os centros de custo que a filial está cadastrada.\"\r\n                trigger={fields[10].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"costCenter\"}\r\n                  label={\"Centro de Custo\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[10].value,\r\n                      message: \"Obrigatório selecionar um centro de custo\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Centro de Custo\"\r\n                    disabled={fields[10].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o Gestor\"\r\n                trigger={fields[11].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"manager\"}\r\n                  label={\"Gestor\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[11].value,\r\n                      message: \"Obrigatório selecionar um dos gestores\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Gestor\"\r\n                    disabled={fields[11].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o local de Trabalho\"\r\n                trigger={fields[12].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workplace\"}\r\n                  label={\"Local de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[12].value,\r\n                      message: \"Obrigatório selecionar local de trabalho\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Local de Trabalho\"\r\n                    disabled={fields[12].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Somente pode selecionar o sindicatos que estão relacionado com a filial\"\r\n                trigger={fields[13].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"syndicate\"}\r\n                  label={\"Sindicato\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[13].value && !fields[11].value,\r\n                      message: \"Obrigatório selecionar sindicato\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Sindicato\"\r\n                    disabled={\r\n                      fields[13].value && !fields[11].value ? false : true\r\n                    }\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Selecione o posto de trabalho\"\r\n                trigger={fields[14].value ? \"hover\" : \"focus\"}\r\n              >\r\n                <Form.Item\r\n                  name={\"workstation\"}\r\n                  label={\"Posto de Trabalho\"}\r\n                  rules={[\r\n                    {\r\n                      required: fields[14].value,\r\n                      message: \"Obrigatório selecionar posto de trabalho\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    allowClear\r\n                    placeholder=\"Selecione Posto de Trabalho\"\r\n                    disabled={fields[14].value ? false : true}\r\n                  ></Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <fieldset className=\"modo-box\">\r\n                <legend>Modalidade</legend>\r\n                <Form.Item\r\n                  name={\"transfJuridica\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Transferência Juridica</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"branch\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        const branchValue = getFieldValue(\"sind\");\r\n                        console.log(value + \"  \" + branchValue);\r\n                        if (value && branchValue) {\r\n                          notificationBranchSind();\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Sindicato e Filial não podem ser movimentadas juntas\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Row>\r\n                    <Checkbox onChange={ChangeCheck}>Filial</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"CostCent\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Centro de Custo</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"hierarchy\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Hierarquia</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name={\"workloc\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Local de Trabalho</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"sind\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        const branchValue = getFieldValue(\"branch\");\r\n                        console.log(value + \"  \" + branchValue);\r\n                        if (value && branchValue) {\r\n                          notificationBranchSind();\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Sindicato e Filial não podem ser movimentadas juntas\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Sindicato</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name={\"postW\"}\r\n                  valuePropName=\"checked\"\r\n                  className=\"check-Mode\"\r\n                >\r\n                  <Row>\r\n                    <Checkbox>Posto de Trabalho</Checkbox>\r\n                  </Row>\r\n                </Form.Item>\r\n              </fieldset>\r\n              <Form.Item\r\n                name={\"movimentDate\"}\r\n                label={\"Data da Movimentação \"}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message:\r\n                      \"Obrigatório o preenchimento da data de movimentação\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (value) {\r\n                        const data = new Date();\r\n\r\n                        //console.log(data);\r\n                        //console.log(data.getMonth());\r\n                        //console.log(value._d.getMonth());\r\n                        //console.log(data.getMonth() < value._d.getMonth());\r\n                        if (data.getMonth() <= value._d.getMonth()) {\r\n                          console.log(\"aceito\");\r\n                          if (value._d.getDate() <= 5) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações de movimentação salarial devem ser requiridas e aprovadas até o dia 5 para entrar em vigência no mesmo mês. Após essa data, entrarão em vigência no mês seguinte.\";\r\n                            tableWarningStr(title, description);\r\n                          } else if (\r\n                            value._d.getDate() > 5 &&\r\n                            value._d.getDate() <= 20\r\n                          ) {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"Para entrar em vigor no mês seguinte, as solicitações devem ser feitas após dia 5 e antes do dia 20, inclusive sendo aprovadas até o dia 20. Caso contrário, somente entrarão em vigência no mês subsequente.\";\r\n                            tableWarningStr(title, description);\r\n                          } else {\r\n                            const title = \"Aviso\";\r\n                            const description =\r\n                              \"As solicitações entrarão em vigência no mês subsequente.\";\r\n                            tableWarningStr(title, description);\r\n                          }\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          console.log(\"rejeitado\");\r\n                          return Promise.reject(\r\n                            new Error(\"Data não pode ser em mês retroativo\")\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return Promise.reject(\r\n                          new Error(\r\n                            \"Obrigatório o preenchimento da data de movimentação\"\r\n                          )\r\n                        );\r\n                      }\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { userAprover } from \"./containerIdentify\";\r\nimport { infoColab } from \"./containeEmployee\";\r\n//import { sendRequest } from \"../controlers/services/userRequest\";\r\n\r\n/* const onFinish = (value) => {\r\n  let today = new Date();\r\n\r\n    let paramNameEmp = {\r\n    nomapr: userAprover.nomfun,\r\n    nomafa: infoColab.nomfun,\r\n    nompap: \"RH Rescisão\",\r\n    tpcola: userAprover.tipcol,\r\n    tpcolb: infoColab.tipcol,\r\n    nmcada: userAprover.numcad,\r\n    nmcadb: infoColab.numcad,\r\n    nmempa: userAprover.numemp,\r\n    nmempb: infoColab.numemp,\r\n    cdcara: userAprover.codcar,\r\n    cdcarb: infoColab.codcar,\r\n    ttreda: userAprover.titred,\r\n    ttredb: infoColab.titred,\r\n    datobs: today,\r\n    desobs: value.descriptionApp,\r\n  }; \r\n\r\n    const response = sendRequest(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.rescisao\",\r\n    \"SetHistoricoObs\",\r\n    paramNameEmp\r\n  ); \r\n  //console.log(paramNameEmp);\r\n  //console.log(userAprover);\r\n  //console.log(infoColab);\r\n}; */\r\n\r\nfunction ContainerObservation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"approver\", value: \"\" },\r\n  ]);\r\n\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      usu: \"\",\r\n      dateTime: \"\",\r\n      role: \"\",\r\n      description: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nome\",\r\n      dataIndex: \"usu\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data/Hora\",\r\n      dataIndex: \"dateTime\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Papel\",\r\n      dataIndex: \"paper\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Observações\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  interface obsItem {\r\n    key: string;\r\n    usu: string;\r\n    dateTime: string;\r\n    role: string;\r\n    description: string;\r\n  }\r\n\r\n  const onFinish = (values: string) => {\r\n    console.log(values);\r\n    console.log(values[\"approver\"]);\r\n    console.log(Object.entries(values));\r\n    const now = new Date();\r\n    console.log(now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }));\r\n    const newObs: obsItem = {\r\n      key: count.toString(),\r\n      usu: values[\"approver\"],\r\n      dateTime: now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }),\r\n      role: \"\",\r\n      description: values[\"descriptionApp\"],\r\n    };\r\n\r\n    setCount((prev) => prev + 1);\r\n    setDataSource((prev) => {\r\n      return [newObs, ...prev];\r\n    });\r\n\r\n    console.log(newObs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Observações</legend>\r\n        <Form\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                name={\"approver\"}\r\n                label={\"Aprovador\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input style={{ marginLeft: \"25px\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Form.Item labelAlign=\"right\">\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Gravar\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Tooltip title=\"Campo opcional para acrescentar observações. Após digitar pressionar tecla 'Gravar'.\">\r\n            <Form.Item\r\n              name={\"descriptionApp\"}\r\n              label={\"Observações\"}\r\n              labelAlign=\"left\"\r\n              labelCol={{ span: 4 }}\r\n            >\r\n              <Input.TextArea showCount maxLength={150} />\r\n            </Form.Item>\r\n          </Tooltip>\r\n          <Form.Item label={\"Histórico\"} labelAlign=\"left\">\r\n            <Table dataSource={dataSource} columns={columns}></Table>\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContainerObservation;\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerMovimentHistory from \"../containers/containersMoviment/containerMovimentHistory\";\r\nimport ContainerSalaryMoviment from \"../containers/containersMoviment/containerSalaryMoviment\";\r\nimport ContainerStructuralMoviment from \"../containers/containersMoviment/containerStructuralMoviment\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport { Form } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function FormPageMovimentation() {\r\n  const [selectMode, setSelectMode] = useState(\"salarial\");\r\n\r\n  return (\r\n    <>\r\n      <ContainerIdentify />\r\n      <ContainerEmployee />\r\n      <ContainerMovimentHistory />\r\n      <Form.Provider\r\n        onFormChange={(name, { changedFields, forms }) => {\r\n          if (\r\n            name === \"salarialMoviment\" &&\r\n            changedFields[0].name[0] === \"movimentType\"\r\n          ) {\r\n            const { structuralMoviment } = forms;\r\n            //console.log(\"Salarial: \" + changedFields[0].value);\r\n            structuralMoviment.setFieldsValue({\r\n              movimentType: changedFields[0].value,\r\n            });\r\n          } else if (\r\n            name === \"structuralMoviment\" &&\r\n            changedFields[0].name[0] === \"movimentType\"\r\n          ) {\r\n            const { salarialMoviment } = forms;\r\n            //console.log(\"Estrutural: \" + changedFields[0].value);\r\n            salarialMoviment.setFieldsValue({\r\n              movimentType: changedFields[0].value,\r\n            });\r\n          }\r\n          setSelectMode(changedFields[0].value);\r\n\r\n          //console.log(changedFields);\r\n          //console.log(changedFields[0].name);\r\n          //console.log(name);\r\n          //console.log(forms);\r\n        }}\r\n      >\r\n        <ContainerSalaryMoviment mode={selectMode} />\r\n        <ContainerStructuralMoviment mode={selectMode} />\r\n      </Form.Provider>\r\n      <ContainerObservation />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  DatePicker,\r\n  Upload,\r\n  Button,\r\n  Switch,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { sendRequest } from \"../../controlers/services/userRequest\";\r\n\r\nvar arrayCausa = [\"\"];\r\n\r\nlet enaLetter = false;\r\n\r\nfunction teste(status: boolean) {\r\n  if (status === true) {\r\n    enaLetter = false;\r\n  } else {\r\n    enaLetter = true;\r\n  }\r\n  console.log(status);\r\n  console.log(enaLetter);\r\n}\r\n\r\nlet array = sendRequest(\"POST\", \"br.com.cvc.wf.rescisao\", \"GetCausaRecisao\");\r\n\r\nfor (let i = 1; i < Object.keys(array.causaDemissao).length; i++) {\r\n  arrayCausa.push(array.causaDemissao[i].desDem);\r\n}\r\n\r\nconst TypeWarning = [\r\n  \"Indenizado\",\r\n  \"Trabalhado\",\r\n  \"Trabalhado + Acréscimo\",\r\n  \"Reavido\",\r\n  \"Reavido Dispensado\",\r\n  \"Trabalhado(Rural)\",\r\n  \"Acordo Mútuo Indenizado\",\r\n  \"Acordo Mútuo Trabalhado\",\r\n];\r\n\r\nconst dias = [1];\r\nfor (let i = 2; i < 31; i++) {\r\n  dias.push(i);\r\n}\r\n\r\nlet upFields = [\r\n  { name: [\"rescissionCause\"], value: \"\" },\r\n  { name: [\"warningType\"], value: \"\" },\r\n  { name: [\"warningDate\"], value: \"\" },\r\n  { name: [\"dismissalDate\"], value: \"\" },\r\n  { name: [\"paymentDate\"], value: \"\" },\r\n  { name: [\"numDayWork\"], value: \"\" },\r\n  { name: [\"compSaturday\"], value: false },\r\n  { name: [\"fufillWork\"], value: false },\r\n  { name: [\"hiredOtherCompany\"], value: false },\r\n  { name: [\"vacancyReplace\"], value: false },\r\n];\r\n\r\nexport default function ContainerRecission() {\r\n  const [fields, setFields] = useState<FieldData[]>(upFields);\r\n\r\n  const [form] = Form.useForm();\r\n  const [tooltip, setTooltip] = useState(\"\");\r\n\r\n  const certificateCauseDead =\r\n    fields[0].value === \"Morte\" ||\r\n    fields[0].value === \"Morte - Acidente Trabalho\" ||\r\n    fields[0].value === \"Morte - Doenca Profissional\";\r\n\r\n  const certificateAskDemission =\r\n    fields[0].value === \"Inic.Empregado c/ Justa Causa\" ||\r\n    fields[0].value === \"Inic.Empregado s/ Justa Causa\";\r\n\r\n  const changeFields = (values) => {\r\n    console.log(values);\r\n\r\n    upFields = [\r\n      { name: [\"rescissionCause\"], value: values[0].value },\r\n      { name: [\"warningType\"], value: values[1].value },\r\n      { name: [\"warningDate\"], value: values[3].value },\r\n      { name: [\"dismissalDate\"], value: values[4].value },\r\n      { name: [\"paymentDate\"], value: values[5].value },\r\n      { name: [\"numDayWork\"], value: values[6].value },\r\n      { name: [\"compSaturday\"], value: values[7].value },\r\n      { name: [\"fufillWork\"], value: values[8].value },\r\n      { name: [\"hiredOtherCompany\"], value: values[9].value },\r\n      { name: [\"vacancyReplace\"], value: values[11].value },\r\n    ];\r\n\r\n    console.log(upFields);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFields(upFields);\r\n    console.log(fields);\r\n  }, [upFields]);\r\n  //console.log(fields);\r\n  //console.log(fields[2].value);\r\n\r\n  //teste();\r\n\r\n  //let enaLetter = false; //teste();\r\n\r\n  //console.log(enaLetter);\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações da Rescisão</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 9 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            changeFields(allFields);\r\n            setFields(upFields);\r\n            console.log(allFields);\r\n            console.log(fields);\r\n            console.log(form.getFieldValue([\"hiredOtherCompany\"]));\r\n          }}\r\n        >\r\n          <Row gutter={30}>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Selecione a causa de demissão\">\r\n                <Form.Item\r\n                  name={[\"rescissionCause\"]}\r\n                  label={\"Causa da Rescisão:\"}\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        if (certificateCauseDead) {\r\n                          return Promise.resolve(\r\n                            setTooltip(\"Favor anexar o atestado de óbito\")\r\n                          );\r\n                        } else if (certificateAskDemission) {\r\n                          return Promise.resolve(\r\n                            setTooltip(\"Favor anexar a carta de demissão\")\r\n                          );\r\n                        }\r\n                        return;\r\n                      },\r\n                    }),\r\n                    {\r\n                      required: true,\r\n                      message: \"Obrigatório Selecionar tipo de aviso prévio.\",\r\n                    },\r\n                  ]}\r\n                  wrapperCol={{ span: 8 }}\r\n                >\r\n                  <Select placeholder=\"Selecione a Causa\">\r\n                    {arrayCausa.map((aviso, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={aviso}>\r\n                          {aviso}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Selecionar o tipo de aviso prévio\">\r\n                <Form.Item\r\n                  name={[\"warningType\"]}\r\n                  label={\"Tipo do Aviso Prévio:\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Obrigatório Selecionar tipo de aviso prévio.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select placeholder=\"Tipo de Aviso prévio\">\r\n                    {TypeWarning.map((causa, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={causa}>\r\n                          {causa}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={30}>\r\n            <Col span={12}>\r\n              <Tooltip title={tooltip}>\r\n                <Form.Item\r\n                  name={[\"attachDoc\"]}\r\n                  label={\"Anexo:\"}\r\n                  hidden={\r\n                    certificateCauseDead || certificateAskDemission\r\n                      ? false\r\n                      : true\r\n                  }\r\n                  rules={[\r\n                    { required: true, message: \"Obrigatório inserir o anexo.\" },\r\n                  ]}\r\n                >\r\n                  <Upload>\r\n                    <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                  </Upload>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Informar a data de início do aviso prévio\">\r\n                <Form.Item\r\n                  name={[\"warningDate\"]}\r\n                  label={\"Data do Aviso Prévio: \"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Obrigatório informar a data de início do aviso prévio.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={30}>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Informar a data da demissão\">\r\n                <Form.Item\r\n                  name={[\"dismissalDate\"]}\r\n                  label={\"Data de Demissão: \"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Obrigatório informar a data de demissão.\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        const weekDay = value._d.getDay();\r\n                        //console.log(weekDay);\r\n                        //console.log(typeof weekDay);\r\n                        if (weekDay === 1 || weekDay === 3) {\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Escolher somente a segunda-feira ou quarta\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"paymentDate\"]} label={\"Data de Pagamento: \"}>\r\n                <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={30}>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Informar os dias trabalhados\">\r\n                <Form.Item\r\n                  name={[\"numDayWork\"]}\r\n                  label={\"Qtd Dias Trabalhado:\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Obrigatório informar os dias trabalhados.\",\r\n                    },\r\n                  ]}\r\n                  wrapperCol={{ span: 4 }}\r\n                >\r\n                  <Select\r\n                    placeholder=\"Dias Trabalhado\"\r\n                    style={{ marginLeft: \"90px\" }}\r\n                  >\r\n                    {dias.map((day, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={day}>\r\n                          {day}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          {/* Inicio dos switchs */}\r\n          <div>\r\n            <Row gutter={20}>\r\n              <Col span={14}>\r\n                <Tooltip title=\"Informar se o sábado será compensado\">\r\n                  <Form.Item\r\n                    name={[\"compSaturday\"]}\r\n                    label={[\"Sábado compensado na semana?\"]}\r\n                  >\r\n                    <Switch\r\n                      unCheckedChildren=\"Não\"\r\n                      checkedChildren=\"Sim\"\r\n                    ></Switch>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={20}>\r\n              <Col span={14}>\r\n                <Tooltip title=\"Informar se cumpriu a jornada semanal\">\r\n                  <Form.Item\r\n                    name={[\"fufillWork\"]}\r\n                    label={[\"Cumpriu a jornada semanal?\"]}\r\n                  >\r\n                    <Switch\r\n                      unCheckedChildren=\"Não\"\r\n                      checkedChildren=\"Sim\"\r\n                    ></Switch>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={20}>\r\n              <Col span={14}>\r\n                <Tooltip title=\"Se contratado por outra empresa tem a opção de anexar carta\">\r\n                  <Form.Item\r\n                    name={[\"hiredOtherCompany\"]}\r\n                    label={[\"Funcionário contratado por outra empresa?\"]}\r\n                  >\r\n                    <Switch\r\n                      unCheckedChildren=\"Não\"\r\n                      checkedChildren=\"Sim\"\r\n                      //onChange={teste}\r\n                    ></Switch>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Tooltip title=\"Opcional para anexar a carta da outra outra empresa\">\r\n                  <Form.Item\r\n                    name={[\"attachLetter\"]}\r\n                    label={\"Anexo:\"}\r\n                    labelCol={{ span: 5 }}\r\n                    hidden={!fields[8].value}\r\n                  >\r\n                    <Upload>\r\n                      <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                    </Upload>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={20}>\r\n              <Col span={14}>\r\n                <Tooltip title=\"Informar se haverá reposição de vagas\">\r\n                  <Form.Item\r\n                    name={[\"vacancyReplace\"]}\r\n                    label={[\"Haverá reposição de vaga?\"]}\r\n                  >\r\n                    <Switch\r\n                      unCheckedChildren=\"Não\"\r\n                      checkedChildren=\"Sim\"\r\n                    ></Switch>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Select, Table, Tooltip } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\n\r\nexport default function ContainerStability() {\r\n  const data = [\r\n    {\r\n      key: 1,\r\n      type: \"Férias\",\r\n      dateBegin: \"12/10/2021\",\r\n      dateEnd: \"12/12/2021\",\r\n      description: \"Féria marcada\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data Inicio\",\r\n      dataIndex: \"dateBegin\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data Fim\",\r\n      dataIndex: \"dateEnd\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"40%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Estabilidades e Férias</legend>\r\n        <Form\r\n          //fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Form.Item name={[\"history\"]} labelAlign=\"left\">\r\n            <Table dataSource={data} columns={columns} bordered />\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Form, Row, Col, Switch, Tooltip, Input } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\n\r\nexport default function ContainerAnalyzeRH() {\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Análise RH Rescisão</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 9 }}\r\n          labelAlign=\"left\"\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Análise de Contrato de Trabalho?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Kit Demissão Pronto?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Documento Docusign?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                label={\"Link do Documento\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                label={\"Status Docusign\"}\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 6 }}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Switch,\r\n  Tooltip,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n  Select,\r\n} from \"antd\";\r\nimport Icon, { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerBenefits() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    //const [form] = Form.useForm();\r\n    //console.log(\"teste\");\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = (value) => {\r\n    //console.log(value);\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    //console.log(record);\r\n    //console.log(index);\r\n\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas Benefícios</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            console.log(name);\r\n            console.log(values);\r\n            console.log(forms);\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n\r\n              console.log(newData);\r\n              console.log(dataSource);\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row gutter={20}>\r\n              <Col span={12}>\r\n                <Form.Item label={\"Preenchido manualmente?\"}>\r\n                  <Switch\r\n                    unCheckedChildren=\"Não\"\r\n                    checkedChildren=\"Sim\"\r\n                  ></Switch>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Switch,\r\n  Tooltip,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n  Select,\r\n} from \"antd\";\r\nimport Icon, { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerRemuneration() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    //const [form] = Form.useForm();\r\n    //console.log(\"teste\");\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = () => {\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    //console.log(record);\r\n    //console.log(index);\r\n\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas Remuneração</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            console.log(name);\r\n            console.log(values);\r\n            console.log(forms);\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n\r\n              console.log(newData);\r\n              console.log(dataSource);\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row gutter={20}>\r\n              <Col span={12}>\r\n                <Form.Item label={\"Preenchido manualmente?\"}>\r\n                  <Switch\r\n                    unCheckedChildren=\"Não\"\r\n                    checkedChildren=\"Sim\"\r\n                  ></Switch>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Select,\r\n  Tooltip,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport Icon, { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerFundsRHRescission() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    //const [form] = Form.useForm();\r\n    //console.log(\"teste\");\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = (value) => {\r\n    //console.log(value);\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    //console.log(record);\r\n    //console.log(index);\r\n\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas RH Rescisão</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            console.log(name);\r\n            console.log(values);\r\n            console.log(forms);\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n\r\n              console.log(newData);\r\n              console.log(dataSource);\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerRecission from \"../containers/containersRescission/containerRecission\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport ContainerStability from \"../containers/containersRescission/containerStability\";\r\nimport ContainerAnalyzeRH from \"../containers/containersRescission/containerAnalyzeRH\";\r\nimport ContainerBenefits from \"../containers/containersRescission/containerBenefits\";\r\nimport ContainerRemuneration from \"../containers/containersRescission/containerRemuneration\";\r\nimport ContainerFundsRHRescission from \"../containers/containersRescission/containerFundsRHRescission\";\r\n\r\nexport default function FormPageRescission() {\r\n  return (\r\n    <>\r\n      <ContainerIdentify />\r\n      <ContainerEmployee />\r\n      <ContainerStability />\r\n      <ContainerRecission />\r\n      <ContainerAnalyzeRH />\r\n      <ContainerBenefits />\r\n      <ContainerRemuneration />\r\n      <ContainerFundsRHRescission />\r\n      <ContainerObservation />\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Space, Table, Radio } from \"antd\";\r\nimport Icon, { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\n\r\nexport default function ContainerInfoVacation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"who\", value: \"\" },\r\n    { name: \"tableInfo\", value: {} },\r\n  ]);\r\n\r\n  const [vacation, setVacation] = useState<any>(\"\");\r\n\r\n  interface iTable {\r\n    rowSelection?: {} | undefined;\r\n    scroll?: {} | undefined;\r\n    hasData?: boolean;\r\n    pagination?: {} | any;\r\n  }\r\n\r\n  const [tableConfig, setTableConfig] = useState<iTable>({\r\n    hasData: true,\r\n    rowSelection: undefined,\r\n  });\r\n\r\n  const data = [\r\n    {\r\n      key: 1,\r\n      status: \"Definido\",\r\n      dateIn: \"\",\r\n      dateEnd: \"\",\r\n      day: \"30\",\r\n      salary13: \"Sim\",\r\n      allowence: \"Sim\",\r\n      advance: \"Sim\",\r\n      part: \"3\",\r\n      children: [\r\n        {\r\n          key: 11,\r\n          part: \"1\",\r\n          dateIn: \"12/05/2022\",\r\n          dateEnd: \"27/05/2022\",\r\n          day: \"15\",\r\n        },\r\n        {\r\n          key: 12,\r\n          part: \"2\",\r\n          dateIn: \"11/07/2022\",\r\n          dateEnd: \"21/07/2022\",\r\n          day: \"10\",\r\n        },\r\n        {\r\n          key: 13,\r\n          part: \"3\",\r\n          dateIn: \"06/09/2022\",\r\n          dateEnd: \"11/09/2022\",\r\n          day: \"5\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      key: 1,\r\n      status: \"Aberto\",\r\n      dateIn: \"\",\r\n      dateEnd: \"\",\r\n      day: \"30\",\r\n      salary13: \"\",\r\n      allowence: \"\",\r\n      advance: \"\",\r\n      part: \"\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Situação\",\r\n      dataIndex: \"status\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Data Inicio\",\r\n      dataIndex: \"dateIn\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Data Fim\",\r\n      dataIndex: \"dateEnd\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Dias\",\r\n      dataIndex: \"day\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"13 Salário\",\r\n      dataIndex: \"salary13\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"abono\",\r\n      dataIndex: \"allowence\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Adiantamento\",\r\n      dataIndex: \"advance\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Parcelas\",\r\n      dataIndex: \"part\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      key: \"action\",\r\n      render: (name) =>\r\n        name.status === \"Definido\" || name.status === \"Aberto\" ? (\r\n          <a>\r\n            <EditOutlined />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onRowSelection = (record, index) => {\r\n    console.log(index);\r\n    console.log(record);\r\n    console.log(record.part);\r\n    form.setFieldsValue({ tableInfo: record });\r\n    form.submit();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações de Férias</legend>\r\n        <Form\r\n          name=\"formInfoVacation\"\r\n          labelCol={{ span: 12 }}\r\n          wrapperCol={{ span: 13 }}\r\n          labelAlign=\"left\"\r\n          //fields={fields}\r\n          form={form}\r\n          onFieldsChange={(_, allfields) => {\r\n            setFields(allfields);\r\n            console.log(allfields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name={\"who\"}\r\n                label={\"Solicitação de Férias\"}\r\n                labelAlign=\"left\"\r\n              >\r\n                <Radio.Group defaultValue=\"ownVacation\" buttonStyle=\"solid\">\r\n                  <Radio.Button value={\"ownVacation\"}>Própria</Radio.Button>\r\n                  <Radio.Button\r\n                    value={\"employeeVacation\"}\r\n                    style={{ marginLeft: \"200px\" }}\r\n                  >\r\n                    Colaborador\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item name={\"tableInfo\"}></Form.Item>\r\n          <Space>\r\n            <Table\r\n              {...tableConfig}\r\n              pagination={false}\r\n              dataSource={data}\r\n              columns={columns}\r\n              onRow={(record, index) => {\r\n                return {\r\n                  onClick: (event) => onRowSelection(record, index),\r\n                };\r\n              }}\r\n            />\r\n          </Space>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Input,\r\n  InputNumber,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Tooltip,\r\n  Checkbox,\r\n  DatePicker,\r\n  notification,\r\n} from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\nimport { OmitProps } from \"antd/lib/transfer/ListBody\";\r\n\r\nlet upVacation = 30;\r\n\r\nexport default function ContainerVacation(props: any) {\r\n  const [fieldsForm, setFieldsForm] = useState<FieldData[]>([\r\n    { name: \"unexcused\", value: \"\" },\r\n    { name: \"vacationDays\", value: upVacation },\r\n    { name: \"dateBeginVacation01\", value: \"\" },\r\n    { name: \"daysVacation01\", value: upVacation },\r\n    { name: \"dateEndVacation01\", value: \"\" },\r\n    { name: \"dateBeginVacation02\", value: \"\" },\r\n    { name: \"daysVacation02\", value: \"\" },\r\n    { name: \"dateEndVacation02\", value: \"\" },\r\n    { name: \"dateBeginVacation03\", value: \"\" },\r\n    { name: \"daysVacation03\", value: \"\" },\r\n    { name: \"dateEndVacation03\", value: \"\" },\r\n  ]);\r\n\r\n  const [enaRow, setEnaRow] = useState({\r\n    enaRow01: true,\r\n    enaRow02: true,\r\n  });\r\n\r\n  const [form] = Form.useForm();\r\n  const dayVacation = fieldsForm[1].value;\r\n\r\n  const textData =\r\n    \"Informar a data de início das férias. Somente será permitido data de inicio após 60 dias da data de requisição. \";\r\n  const textDays =\r\n    \"Se parcelado, o número de dias não poderá ser menor que 5 e uma das parcelas deve ser de 14 dias\";\r\n\r\n  const warningNote = (description) => {\r\n    notification.open({\r\n      message: \"Atenção Erro no preenchimento\",\r\n      description: description,\r\n      icon: <WarningOutlined style={{ color: \"#FF0000\" }} />,\r\n      style: {\r\n        background: \"#bfcff7\",\r\n      },\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  const dateEnd = (date, days) => {\r\n    let data = new Date(date);\r\n    //console.log(date + typeof date);\r\n    //console.log(data + typeof data);\r\n    data.setDate(data.getDate() + days);\r\n    //console.log(date);\r\n    //console.log(data);\r\n    //console.log(data.toLocaleDateString(\"en-GB\"));\r\n    return data.toLocaleDateString(\"en-GB\");\r\n  };\r\n\r\n  function validatorDate(value, name) {\r\n    if (value === \"\") {\r\n      return false;\r\n    } else {\r\n      console.log(value._d);\r\n\r\n      //console.log(value._d.getDay());\r\n      const dayweek = value._d.getDay();\r\n\r\n      if (dayweek === 0) {\r\n        const aviso =\r\n          \"Dia de inicio da férias cai no domingo. Data não permitida. Favor corrigir\";\r\n        warningNote(aviso);\r\n      } else if (dayweek === 6) {\r\n        const aviso =\r\n          \"Dia de inicio da férias cai no sábado. Data não permitida. Favor corrigir\";\r\n        warningNote(aviso);\r\n      }\r\n      if (value) {\r\n        const data = new Date(value._d);\r\n        const today = new Date();\r\n        let diff = Math.abs(data.getTime() - today.getTime());\r\n        let dias = Math.ceil(diff / (1000 * 60 * 60 * 24));\r\n        //console.log(dias);\r\n        if (dias < 60) {\r\n          const aviso =\r\n            \"Não é permitido escolher data abaixo de 60 dias após a data de requisição. Por favor verifique o preenchimento\";\r\n\r\n          warningNote(aviso);\r\n          return false;\r\n        } else if (name === \"dateBeginVacation02\") {\r\n          const timeMin = Date.parse(fieldsForm[2].value._d);\r\n          let refDate = new Date(timeMin);\r\n\r\n          refDate.setDate(refDate.getDate() + parseInt(fieldsForm[3].value));\r\n          console.log(refDate);\r\n          console.log(data);\r\n          if (data < refDate && data.getDate() < refDate.getDate()) {\r\n            const aviso =\r\n              \"Data não pode ser inferior ou igual a data da primeira parcela. Favor selecionar uma data deferente da primeira parcela \";\r\n            warningNote(aviso);\r\n\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        } else if (name === \"dateBeginVacation03\") {\r\n          const timeMin = Date.parse(fieldsForm[5].value._d);\r\n          let refDate = new Date(timeMin);\r\n          refDate.setDate(refDate.getDate() + parseInt(fieldsForm[6].value));\r\n          console.log(refDate);\r\n          if (data < refDate && data.getDate() < refDate.getDate()) {\r\n            const aviso =\r\n              \"Data não pode ser inferior ou igual a data da primeira parcela. Favor selecionar uma data com diferença de no mínimo 30 dias \";\r\n            warningNote(aviso);\r\n\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const validatorDays = (value, name) => {\r\n    let diffDays = 0;\r\n    console.log(value);\r\n\r\n    props.set({\r\n      show01: true,\r\n      show02: true,\r\n    });\r\n\r\n    if (name === \"daysVacation01\") {\r\n      diffDays = dayVacation - value;\r\n      //console.log(fieldsForm[4].value);\r\n      console.log(diffDays);\r\n\r\n      if (\r\n        (value >= 14 || diffDays >= 14) &&\r\n        value <= dayVacation - 5 &&\r\n        value >= 5\r\n      ) {\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: true,\r\n        });\r\n        return diffDays;\r\n      } else if (\r\n        fieldsForm[4].value < 5 ||\r\n        fieldsForm[4].value === undefined ||\r\n        diffDays < 5\r\n      ) {\r\n        setEnaRow({\r\n          enaRow01: true,\r\n          enaRow02: true,\r\n        });\r\n      }\r\n    } else if (name === \"daysVacation02\") {\r\n      diffDays = dayVacation - fieldsForm[3].value - value;\r\n      console.log(diffDays < 5);\r\n      console.log(value);\r\n      console.log(diffDays);\r\n      console.log(dayVacation);\r\n      console.log(fieldsForm[9].value);\r\n      console.log(dayVacation - fieldsForm[3].value);\r\n      if (diffDays < 5) {\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: true,\r\n        });\r\n      } else if (\r\n        value >= 14 ||\r\n        diffDays === 14 ||\r\n        (value >= 5 && value <= dayVacation - fieldsForm[3].value - 5)\r\n      ) {\r\n        console.log(dayVacation - fieldsForm[3].value - 5);\r\n        setEnaRow({\r\n          enaRow01: false,\r\n          enaRow02: false,\r\n        });\r\n      }\r\n    } else {\r\n      setEnaRow({\r\n        enaRow01: true,\r\n        enaRow02: true,\r\n      });\r\n    }\r\n    return diffDays;\r\n  };\r\n\r\n  const handleDayVacation = (value) => {\r\n    console.log(value);\r\n    const testDate = form.getFieldValue(\"dateBeginVacation01\");\r\n    console.log(JSON.stringify(fieldsForm[6].name) === '[\"daysVacation02\"]');\r\n\r\n    const validDate = validatorDate(testDate, \"dateBeginVacation01\");\r\n    const diffDays = validatorDays(value, \"daysVacation01\");\r\n    const datEnd = dateEnd(Date.parse(testDate._d), value);\r\n    console.log(diffDays);\r\n    console.log(datEnd);\r\n\r\n    /* setFieldsForm((prev: any) => ({\r\n      ...prev,\r\n      [\"daysVacation02\"]: diffDays,\r\n    })); */\r\n  };\r\n\r\n  const handleInput01 = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Seleção de Férias</legend>\r\n        <Form\r\n          name=\"formVacation\"\r\n          labelCol={{ span: 9 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fieldsForm}\r\n          form={form}\r\n          onFieldsChange={(_, allfields) => {\r\n            //changeFields(allfields);\r\n            setFieldsForm(allfields);\r\n            console.log(fieldsForm);\r\n          }}\r\n          onValuesChange={(changeValues, allValues) => {\r\n            //console.log(changeValues);\r\n            //console.log(allValues);\r\n          }}\r\n        >\r\n          <div>\r\n            <Row gutter={15}>\r\n              <Col span={10}>\r\n                <Form.Item\r\n                  name={\"unexcused\"}\r\n                  label={\"Faltas não justificadas\"}\r\n                  labelAlign=\"left\"\r\n                  labelCol={{ span: 14 }}\r\n                  wrapperCol={{ span: 7 }}\r\n                  rules={[\r\n                    ({ getFieldsValue, setFieldsValue }) => ({\r\n                      validator(_, value) {\r\n                        console.log(value);\r\n                        console.log(value);\r\n                        if (value <= 5) {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 30,\r\n                            daysVacation01: 30,\r\n                          });\r\n                        } else if (value > 5 && value <= 14) {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 24,\r\n                            daysVacation01: 24,\r\n                          });\r\n                        } else if (value > 14 && value <= 23) {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 18,\r\n                            daysVacation01: 18,\r\n                          });\r\n                        } else if (value > 23 && value <= 32) {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 12,\r\n                            daysVacation01: 12,\r\n                          });\r\n                        } else {\r\n                          form.setFieldsValue({\r\n                            vacationDays: 0,\r\n                            daysVacation01: 0,\r\n                          });\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input /* onChange={handleVacationDays} */ />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={14}>\r\n                <Form.Item\r\n                  name={\"vacationDays\"}\r\n                  label={\"Dias Aquisitivos de Férias\"}\r\n                  labelAlign=\"right\"\r\n                  labelCol={{ span: 16 }}\r\n                  wrapperCol={{ span: 5 }}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row\r\n              gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n              justify=\"space-around\"\r\n              style={{ marginBottom: \"50px\" }}\r\n            >\r\n              <Checkbox value=\"checkAllowance\">Abono</Checkbox>\r\n              <Checkbox value=\"checkSalary13\">13 Salário</Checkbox>\r\n              <Checkbox value=\"checkAdvance\">Adiantamento</Checkbox>\r\n            </Row>\r\n            <Row gutter={12} justify=\"space-around\">\r\n              <Tooltip placement=\"top\" title={textData}>\r\n                <Form.Item\r\n                  label={\"Data Início\"}\r\n                  name={\"dateBeginVacation01\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Obrigatório informar a data de inicio das férias.\",\r\n                    },\r\n                    ({ getFieldValue, setFieldsValue }) => ({\r\n                      validator(_, value) {\r\n                        const validDate = validatorDate(\r\n                          value,\r\n                          \"dateBeginVacation01\"\r\n                        );\r\n                        let datEnd = \"\";\r\n                        //console.log(validDate);\r\n                        if (validDate) {\r\n                          const vacationDay = getFieldValue(\"daysVacation01\");\r\n                          //console.log(vacationDay);\r\n                          if (vacationDay) {\r\n                            datEnd = dateEnd(Date.parse(value._d), vacationDay);\r\n                          }\r\n                          console.log(datEnd);\r\n                          setFieldsValue({\r\n                            dateEndVacation01: datEnd,\r\n                          });\r\n                          return Promise.resolve(\r\n                            setFieldsValue({\r\n                              dateEndVacation01: datEnd,\r\n                            })\r\n                          );\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Data negada. Favor digitar uma data correta\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n\r\n              <Tooltip placement=\"top\" title={textDays}>\r\n                <Form.Item\r\n                  label={\"Qto Dias\"}\r\n                  name={\"daysVacation01\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Favor informar o número de dias de férias.\",\r\n                    },\r\n\r\n                    ({ getFieldValue, setFieldsValue, setFields }) => ({\r\n                      validator(_, value) {\r\n                        const testDate = getFieldValue(\"dateBeginVacation01\");\r\n                        console.log(value);\r\n                        const validDate = validatorDate(\r\n                          testDate,\r\n                          \"dateBeginVacation01\"\r\n                        );\r\n                        const totalDays = getFieldValue(\"vacationDays\");\r\n\r\n                        if (testDate.length === 0) {\r\n                          //console.log(\"teste data01 vazio\");\r\n                          setFields([\r\n                            {\r\n                              name: \"daysVacation01\",\r\n                              value: totalDays,\r\n                            },\r\n                          ]);\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Favor primeiro selecionar a data de inicio das férias corretamente.\"\r\n                            )\r\n                          );\r\n                        } else if (totalDays < 19) {\r\n                          const aviso =\r\n                            \"Numero de dias de férias insuficientes para parcelar férias. Valor será em cota única \";\r\n                          warningNote(aviso);\r\n                          setFieldsValue({\r\n                            daysVacation01: totalDays,\r\n                          });\r\n                          return Promise.reject(\r\n                            new Error(\"Não é permitido parcelar\")\r\n                          );\r\n                        } else if (getFieldValue(\"daysVacation02\") < 6) {\r\n                          setFieldsValue({\r\n                            daysVacation01: fieldsForm[3].value - 1,\r\n                            daysVacation02: 5,\r\n                          });\r\n                          const aviso =\r\n                            \"A segunda parcela não pode ser menor que 5 \";\r\n                          warningNote(aviso);\r\n                          return Promise.reject();\r\n                        } else {\r\n                          if (validDate) {\r\n                            if (value < totalDays && value > totalDays - 2) {\r\n                              const datEndP1 = dateEnd(\r\n                                Date.parse(testDate._d),\r\n                                totalDays - 5\r\n                              );\r\n                              console.log(\"inicio\");\r\n                              const diffDays = validatorDays(\r\n                                totalDays - 5,\r\n                                \"daysVacation01\"\r\n                              );\r\n\r\n                              setFieldsValue({\r\n                                daysVacation01: totalDays - 5,\r\n                                dateEndVacation01: datEndP1,\r\n                                daysVacation02: diffDays,\r\n                                dateEndVacation02: \"\",\r\n                                dateBeginVacation02: \"\",\r\n                                daysVacation03: \"\",\r\n                                dateEndVacation03: \"\",\r\n                                dateBeginVacation03: \"\",\r\n                              });\r\n\r\n                              /* Se P2 e P3 igual 5 não permite que P1 aceite incrementar até 30 */\r\n                            } else if (\r\n                              getFieldValue(\"daysVacation02\") < 6 &&\r\n                              getFieldValue(\"daysVacation01\") >=\r\n                                getFieldValue(\"vacationDays\") - 10 &&\r\n                              getFieldValue(\"daysVacation03\") === 5\r\n                            ) {\r\n                              console.log(\r\n                                \"Erro: Se P2 e P3 igual 5 não permite que P1 aceite incrementar até 30 \"\r\n                              );\r\n                              return Promise.reject(\r\n                                new Error(\"Máximo valor permitido\")\r\n                              );\r\n                              /* Se P3=0 e P2<5 e P1>25  */\r\n                            } else if (\r\n                              getFieldValue(\"daysVacation02\") <= 5 &&\r\n                              getFieldValue(\"daysVacation01\") > totalDays - 6\r\n                            ) {\r\n                              const datEndP1 = dateEnd(\r\n                                Date.parse(testDate._d),\r\n                                totalDays\r\n                              );\r\n                              console.log(\"P3=0 P2<5 P1>total - 5\");\r\n\r\n                              setFieldsValue({\r\n                                daysVacation01: totalDays,\r\n                                dateEndVacation01: datEndP1,\r\n                                daysVacation02: \"\",\r\n                                dateEndVacation02: \"\",\r\n                                dateBeginVacation02: \"\",\r\n                              });\r\n\r\n                              validatorDays(value, \"daysVacation01\");\r\n                            } else {\r\n                              console.log(value);\r\n\r\n                              const datEndP1 = dateEnd(\r\n                                Date.parse(testDate._d),\r\n                                value\r\n                              );\r\n\r\n                              console.log(datEndP1);\r\n                              /* dataInP2=\"\" e diasP2=0 */\r\n                              if (\r\n                                getFieldValue(\"dateBeginVacation02\") === \"\" &&\r\n                                getFieldValue(\"daysVacation02\") === \"\"\r\n                              ) {\r\n                                console.log(\"dataInP2 e diasp2 vazios \");\r\n\r\n                                const diffDays = validatorDays(\r\n                                  value,\r\n                                  \"daysVacation01\"\r\n                                );\r\n\r\n                                setFieldsValue({\r\n                                  dateEndVacation01: datEndP1,\r\n                                  daysVacation02: diffDays,\r\n                                  dateEndVacation02: \"\",\r\n                                  dateBeginVacation02: \"\",\r\n                                  daysVacation03: \"\",\r\n                                  dateEndVacation03: \"\",\r\n                                  dateBeginVacation03: \"\",\r\n                                });\r\n                              } else if (\r\n                                getFieldValue(\"daysVacation02\") !== \"\"\r\n                              ) {\r\n                                console.log(\"Regra da parcela2\");\r\n                                const dateBegin02 = getFieldValue(\r\n                                  \"dateBeginVacation02\"\r\n                                );\r\n                                const diasP2 =\r\n                                  totalDays -\r\n                                  getFieldValue(\"daysVacation01\") -\r\n                                  getFieldValue(\"daysVacation03\");\r\n                                /* Existe data parcela 2 */\r\n                                if (dateBegin02 !== \"\") {\r\n                                  const datEndP2 = dateEnd(\r\n                                    Date.parse(dateBegin02._d),\r\n                                    value\r\n                                  );\r\n                                  /* Existe data parcela 2 e diasP3*/\r\n                                  if (getFieldValue(\"daysVacation03\") !== \"\") {\r\n                                    console.log(\"Regra da parcela3\");\r\n                                    const daysVac03 =\r\n                                      getFieldValue(\"daysVacation03\");\r\n\r\n                                    const dataInP3 =\r\n                                      getFieldValue(\"dateBeginVacation03\") !==\r\n                                      \"\"\r\n                                        ? getFieldValue(\"dateBeginVacation03\")\r\n                                        : \"\";\r\n\r\n                                    /* Existe dataP2 e dataP3 */\r\n                                    if (dataInP3 !== \"\") {\r\n                                      console.log(\"dataInP3 com valor\");\r\n                                      const datEndP3 = dateEnd(\r\n                                        Date.parse(dataInP3._d),\r\n                                        daysVac03\r\n                                      );\r\n\r\n                                      setFieldsValue({\r\n                                        dateEndVacation01: datEndP1,\r\n                                        daysVacation02: diasP2,\r\n                                        dateEndVacation02: datEndP2,\r\n                                        dateBeginVacation02: dateBegin02,\r\n                                        daysVacation03: daysVac03,\r\n                                        dateEndVacation03: datEndP3,\r\n                                        dateBeginVacation03: dataInP3,\r\n                                      });\r\n                                    } else {\r\n                                      console.log(\"dataInP3 vazio\");\r\n                                      setFieldsValue({\r\n                                        dateEndVacation01: datEndP1,\r\n                                        daysVacation02: diasP2,\r\n                                        dateEndVacation02: datEndP2,\r\n                                        dateBeginVacation02: dateBegin02,\r\n                                        daysVacation03: daysVac03,\r\n                                        dateEndVacation03: \"\",\r\n                                        dateBeginVacation03: \"\",\r\n                                      });\r\n                                      validatorDays(diasP2, \"daysVacation02\");\r\n                                    }\r\n                                    /* Existe data parcela 2 e diasP3=0 */\r\n                                  } else if (\r\n                                    getFieldValue(\"daysVacation03\") === \"\"\r\n                                  ) {\r\n                                    console.log(\"diasP3 vazio \");\r\n                                    setFieldsValue({\r\n                                      dateEndVacation01: datEndP1,\r\n                                      daysVacation02: diasP2,\r\n                                      dateEndVacation02: datEndP2,\r\n                                      dateBeginVacation02: dateBegin02,\r\n                                      daysVacation03: \"\",\r\n                                      dateEndVacation03: \"\",\r\n                                      dateBeginVacation03: \"\",\r\n                                    });\r\n                                  }\r\n                                  /* Sem dataP2 */\r\n                                } else {\r\n                                  console.log(\r\n                                    \"dataInP2 vazio e diasP2 com valor \"\r\n                                  );\r\n                                  const diffDays = validatorDays(\r\n                                    value,\r\n                                    \"daysVacation01\"\r\n                                  );\r\n                                  console.log(value);\r\n                                  console.log(diffDays);\r\n                                  setFieldsValue({\r\n                                    dateEndVacation01: datEndP1,\r\n                                    daysVacation02: diffDays,\r\n                                    dateEndVacation02: \"\",\r\n                                    dateBeginVacation02: \"\",\r\n                                    daysVacation03: \"\",\r\n                                    dateEndVacation03: \"\",\r\n                                    dateBeginVacation03: \"\",\r\n                                  });\r\n                                }\r\n\r\n                                return Promise.resolve();\r\n                              }\r\n                            }\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\"Data está invalida. Favor corrigir\")\r\n                            );\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    min={5}\r\n                    max={\r\n                      form.getFieldValue(\"daysVacation02\") < 6 &&\r\n                      form.getFieldValue(\"daysVacation03\") === 5\r\n                        ? form.getFieldValue(\"vacationDays\") -\r\n                          form.getFieldValue(\"daysVacation02\") -\r\n                          form.getFieldValue(\"daysVacation03\")\r\n                        : form.getFieldValue(\"vacationDays\")\r\n                    }\r\n\r\n                    //defaultValue={10}\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Form.Item label={\"Data Fim\"} name={\"dateEndVacation01\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Row>\r\n          </div>\r\n          <div hidden={!enaRow.enaRow01 || !props.ena.show01 ? false : true}>\r\n            <Row gutter={12} justify=\"space-around\">\r\n              <Tooltip placement=\"top\" title={textData}>\r\n                <Form.Item\r\n                  label={\"Data Início\"}\r\n                  name={\"dateBeginVacation02\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Obrigatório informar a data de inicio das férias.\",\r\n                    },\r\n                    ({ getFieldValue, setFieldsValue }) => ({\r\n                      validator(_, value) {\r\n                        const validDate = validatorDate(\r\n                          value,\r\n                          \"dateBeginVacation02\"\r\n                        );\r\n\r\n                        let datEnd = \"\";\r\n                        //console.log(validDate);\r\n                        if (\r\n                          getFieldValue(\"daysVacation01\") < 14 &&\r\n                          getFieldValue(\"daysVacation02\") < 14 &&\r\n                          getFieldValue(\"daysVacation03\") < 14\r\n                        ) {\r\n                          const aviso =\r\n                            \"Uma das parcela tem que maior ou igual a 14 dias. Favor corrigir \";\r\n                          warningNote(aviso);\r\n                          return Promise.reject(\r\n                            new Error(\"Parcelas não permitidas\")\r\n                          );\r\n                        } else {\r\n                          if (validDate) {\r\n                            const vacationDay = getFieldValue(\"daysVacation02\");\r\n                            //console.log(vacationDay);\r\n                            if (vacationDay) {\r\n                              datEnd = dateEnd(\r\n                                Date.parse(value._d),\r\n                                vacationDay\r\n                              );\r\n                            }\r\n                            setFieldsValue({\r\n                              dateEndVacation02: datEnd,\r\n                            });\r\n                            return Promise.resolve(\r\n                              setFieldsValue({\r\n                                dateEndVacation02: datEnd,\r\n                              })\r\n                            );\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\r\n                                \"Data negada. Favor digitar uma data correta\"\r\n                              )\r\n                            );\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Tooltip placement=\"top\" title={textDays}>\r\n                <Form.Item\r\n                  label={\"Qto Dias\"}\r\n                  name={\"daysVacation02\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Favor informar o número de dias de férias.\",\r\n                    },\r\n\r\n                    ({ getFieldValue, setFieldsValue, setFields }) => ({\r\n                      validator(_, value) {\r\n                        console.log(value);\r\n                        //console.log(getFieldValue(\"daysVacation02\"));\r\n\r\n                        //checkDays(value, \"daysVacation01\");\r\n                        //setFieldsValue({ daysVacation02: daysVac02 });\r\n                        const testDate = getFieldValue(\"dateBeginVacation02\");\r\n                        //console.log(testDate);\r\n                        const validDate = validatorDate(\r\n                          testDate,\r\n                          \"dateBeginVacation02\"\r\n                        );\r\n                        const totalDays = getFieldValue(\"vacationDays\");\r\n                        /* console.log(\r\n                          getFieldValue(\"daysVacation01\") < 14 &&\r\n                            value < 14 &&\r\n                            value + getFieldValue(\"daysVacation03\") < 16\r\n                        );\r\n                        console.log(\r\n                          getFieldValue(\"daysVacation03\") < 14 &&\r\n                            value + getFieldValue(\"daysVacation01\") < 16\r\n                        );\r\n                        console.log(\r\n                          value < 14 &&\r\n                            getFieldValue(\"daysVacation01\") < 14 &&\r\n                            getFieldValue(\"daysVacation01\") +\r\n                              getFieldValue(\"daysVacation03\") <\r\n                              16\r\n                        );\r\n                        console.log(testDate._d);\r\n                        console.log(validDate); */\r\n\r\n                        if (totalDays < 25) {\r\n                          const aviso =\r\n                            \"Numero de dias de férias insuficientes para parcelar as férias em 3 vezes. \";\r\n                          warningNote(aviso);\r\n                          setFieldsValue({\r\n                            daysVacation02:\r\n                              totalDays - getFieldValue(\"daysVacation01\"),\r\n                          });\r\n                          return Promise.reject(\r\n                            new Error(\"Não é permitido parcelar\")\r\n                          );\r\n                        } else {\r\n                          if (testDate._d) {\r\n                            if (validDate) {\r\n                              if (\r\n                                value <=\r\n                                  totalDays - getFieldValue(\"daysVacation01\") &&\r\n                                value >=\r\n                                  totalDays -\r\n                                    getFieldValue(\"daysVacation01\") -\r\n                                    2\r\n                              ) {\r\n                                console.log(\"inicio parcela 2\");\r\n\r\n                                const datEndP2 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  value - 4\r\n                                );\r\n\r\n                                setFields([\r\n                                  { name: \"daysVacation02\", value: value - 4 },\r\n                                  {\r\n                                    name: \"dateEndVacation02\",\r\n                                    value: datEndP2,\r\n                                  },\r\n                                  { name: \"dateBeginVacation03\", value: \"\" },\r\n                                  { name: \"daysVacation03\", value: 5 },\r\n                                  { name: \"dateEndVacation03\", value: \"\" },\r\n                                ]);\r\n\r\n                                validatorDays(value - 4, \"daysVacation02\");\r\n                                /* caso reduza valor P3<5 e P2 aumenta */\r\n                              } else if (\r\n                                getFieldValue(\"daysVacation03\") < 6 &&\r\n                                getFieldValue(\"daysVacation02\") >\r\n                                  totalDays -\r\n                                    getFieldValue(\"daysVacation01\") -\r\n                                    5\r\n                              ) {\r\n                                console.log(\"daysVacation03 menor que 5\");\r\n                                const daysVac02 =\r\n                                  getFieldValue(\"vacationDays\") -\r\n                                  getFieldValue(\"daysVacation01\");\r\n                                console.log(daysVac02);\r\n\r\n                                const datEndP2 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  daysVac02\r\n                                );\r\n\r\n                                setFieldsValue({\r\n                                  daysVacation02: daysVac02,\r\n                                  dateEndVacation02: datEndP2,\r\n                                  daysVacation03: \"\",\r\n                                  dateEndVacation03: \"\",\r\n                                  dateBeguinVacation03: \"\",\r\n                                });\r\n\r\n                                validatorDays(daysVac02, \"daysVacation02\");\r\n\r\n                                /* const diffDays = validatorDays(\r\n                              value,\r\n                              \"daysVacation02\"\r\n                            ); */\r\n                                /*Erro diasP2 e diasP3 < 6  */\r\n                              } else if (\r\n                                getFieldValue(\"daysVacation02\") < 6 &&\r\n                                getFieldValue(\"daysVacation03\") < 6\r\n                              ) {\r\n                                console.log(\"Erro diasP2 e diasP3 < 6\");\r\n                                return Promise.reject();\r\n                                /*Se ok  */\r\n                              } else {\r\n                                console.log(\"Se ok\");\r\n                                const diffDays = validatorDays(\r\n                                  value,\r\n                                  \"daysVacation02\"\r\n                                );\r\n                                const datEndP2 = dateEnd(\r\n                                  Date.parse(testDate._d),\r\n                                  value\r\n                                );\r\n                                console.log(datEndP2);\r\n                                console.log(diffDays);\r\n\r\n                                const dateBeginP3 = getFieldValue(\r\n                                  \"dateBeguinVacation03\"\r\n                                );\r\n                                console.log(dateBeginP3);\r\n                                console.log(fieldsForm[8]);\r\n                                /* Com o valor da data de inicio */\r\n                                if (fieldsForm[8].value === \"\" || undefined) {\r\n                                  console.log(\"Sem dataInP3\");\r\n                                  setFieldsValue({\r\n                                    dateEndVacation02: datEndP2,\r\n                                    daysVacation03: diffDays,\r\n                                    dateEndVacation03: \"\",\r\n                                    dateBeguinVacation03: \"\",\r\n                                  });\r\n                                } else {\r\n                                  console.log(\"Com dataInP3\");\r\n                                  const datEndP3 = dateEnd(\r\n                                    Date.parse(fieldsForm[8].value._d),\r\n                                    diffDays\r\n                                  );\r\n\r\n                                  setFieldsValue({\r\n                                    dateEndVacation02: datEndP2,\r\n                                    daysVacation03: diffDays,\r\n                                    dateEndVacation03: datEndP3,\r\n                                  });\r\n                                }\r\n\r\n                                return Promise.resolve();\r\n                              }\r\n                            } else {\r\n                              return Promise.reject(\r\n                                new Error(\"Data está invalida. Favor corrigir\")\r\n                              );\r\n                            }\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\r\n                                \"Favor primeiro selecionar a data de inicio das férias corretamente.\"\r\n                              )\r\n                            );\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <InputNumber\r\n                    min={5}\r\n                    max={\r\n                      form.getFieldValue(\"vacationDays\") -\r\n                      form.getFieldValue(\"daysVacation01\")\r\n                    }\r\n                    onChange={handleInput01}\r\n                  />\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Form.Item label={\"Data Fim\"} name={\"dateEndVacation02\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Row>\r\n          </div>\r\n          <div hidden={!enaRow.enaRow02 || !props.ena.show02 ? false : true}>\r\n            <Row gutter={12} justify=\"space-around\">\r\n              <Tooltip placement=\"top\" title={textData}>\r\n                <Form.Item\r\n                  label={\"Data Início\"}\r\n                  name={\"dateBeginVacation03\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Obrigatório informar a data de inicio das férias.\",\r\n                    },\r\n                    ({ getFieldValue, setFieldsValue }) => ({\r\n                      validator(_, value) {\r\n                        const validDate = validatorDate(\r\n                          value,\r\n                          \"dateBeginVacation03\"\r\n                        );\r\n                        let datEnd = \"\";\r\n                        //console.log(validDate);\r\n                        if (\r\n                          getFieldValue(\"daysVacation01\") < 14 &&\r\n                          getFieldValue(\"daysVacation02\") < 14 &&\r\n                          getFieldValue(\"daysVacation03\") < 14\r\n                        ) {\r\n                          const aviso =\r\n                            \"Uma das parcela tem que maior ou igual a 14 dias. Favor corrigir \";\r\n                          warningNote(aviso);\r\n                          return Promise.reject(\r\n                            new Error(\"Parcelas não permitidas\")\r\n                          );\r\n                        } else {\r\n                          if (validDate) {\r\n                            const vacationDay = getFieldValue(\"daysVacation03\");\r\n                            console.log(vacationDay);\r\n                            if (vacationDay) {\r\n                              datEnd = dateEnd(\r\n                                Date.parse(value._d),\r\n                                vacationDay\r\n                              );\r\n                            }\r\n                            console.log(datEnd);\r\n\r\n                            setFieldsValue({\r\n                              dateEndVacation03: datEnd,\r\n                            });\r\n                            return Promise.resolve(\r\n                              setFieldsValue({\r\n                                dateEndVacation03: datEnd,\r\n                              })\r\n                            );\r\n                          } else {\r\n                            return Promise.reject(\r\n                              new Error(\r\n                                \"Data negada. Favor digitar uma data correta\"\r\n                              )\r\n                            );\r\n                          }\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n              <Form.Item label={\"Qto Dias\"} name={\"daysVacation03\"}>\r\n                <InputNumber readOnly />\r\n              </Form.Item>\r\n              <Form.Item label={\"Data Fim\"} name={\"dateEndVacation03\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Row>\r\n          </div>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerInfoVacation from \"../containers/containersVacation/containerInfoVacation\";\r\nimport ContainerVacation from \"../containers/containersVacation/containerVacation\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport { Input, Form, Row, Col, Space, Table, Radio } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function FormPageVacation() {\r\n  const [showRow, setShowRow] = useState({\r\n    show01: true,\r\n    show02: true,\r\n  });\r\n\r\n  const [daysVacation, setDaysVacation] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <ContainerIdentify />\r\n      <ContainerEmployee />\r\n      <Form.Provider\r\n        onFormFinish={(name, { values, forms }) => {\r\n          console.log(name);\r\n          console.log(values);\r\n          console.log(forms);\r\n          const { formVacation } = forms;\r\n          if (values.tableInfo) {\r\n            for (let i = 0; i < values.tableInfo.part; i++) {\r\n              formVacation.setFields([\r\n                {\r\n                  name: \"dateBeginVacation0\" + (i + 1),\r\n                  value: moment(\r\n                    values.tableInfo.children[i].dateIn,\r\n                    \"DD/MM/YYYY\"\r\n                  ),\r\n                },\r\n                {\r\n                  name: \"daysVacation0\" + (i + 1),\r\n                  value: values.tableInfo.children[i].day,\r\n                },\r\n                {\r\n                  name: \"dateEndVacation0\" + (i + 1),\r\n                  value: values.tableInfo.children[i].dateEnd,\r\n                },\r\n              ]);\r\n            }\r\n          }\r\n          /* formVacation.setFieldsValue({\r\n            dateBeginVacation01: moment(\r\n              values.tableInfo.children[0].dateIn,\r\n              \"DD/MM/YYYY\"\r\n            ),\r\n            daysVacation01: values.tableInfo.children[0].day,\r\n            dateEndVacation01: values.tableInfo.children[0].dateEnd,\r\n            dateBeginVacation02: moment(\r\n              values.tableInfo.children[1].dateIn,\r\n              \"DD/MM/YYYY\"\r\n            ),\r\n            daysVacation02: values.tableInfo.children[1].day,\r\n            dateEndVacation02: values.tableInfo.children[1].dateEnd,\r\n          }); */\r\n\r\n          formVacation.setFields([\r\n            {\r\n              name: \"dateBeginVacation01\",\r\n              value: moment(values.tableInfo.children[0].dateIn, \"DD/MM/YYYY\"),\r\n            },\r\n            { name: \"daysVacation01\", value: values.tableInfo.children[0].day },\r\n            {\r\n              name: \"dateEndVacation01\",\r\n              value: values.tableInfo.children[0].dateEnd,\r\n            },\r\n            {\r\n              name: \"dateBeginVacation02\",\r\n              value: moment(values.tableInfo.children[1].dateIn, \"DD/MM/YYYY\"),\r\n            },\r\n            { name: \"daysVacation02\", value: values.tableInfo.children[1].day },\r\n            {\r\n              name: \"dateEndVacation02\",\r\n              value: values.tableInfo.children[1].dateEnd,\r\n            },\r\n            {\r\n              name: \"dateBeginVacation03\",\r\n              value: moment(values.tableInfo.children[2].dateIn, \"DD/MM/YYYY\"),\r\n            },\r\n            { name: \"daysVacation03\", value: values.tableInfo.children[2].day },\r\n            {\r\n              name: \"dateEndVacation03\",\r\n              value: values.tableInfo.children[2].dateEnd,\r\n            },\r\n            { name: \"vacationDays\", value: values.tableInfo.day },\r\n          ]);\r\n          if (values.tableInfo.part === \"2\") {\r\n            setShowRow({\r\n              show01: false,\r\n              show02: true,\r\n            });\r\n          } else if (values.tableInfo.part === \"3\") {\r\n            setShowRow({\r\n              show01: false,\r\n              show02: false,\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        <ContainerInfoVacation />\r\n        <ContainerVacation ena={showRow} set={setShowRow} />\r\n      </Form.Provider>\r\n      <ContainerObservation />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Layout,\r\n  Tabs,\r\n  Input,\r\n  Select,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Space,\r\n} from \"antd\";\r\nimport ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerRecission from \"../containers/containersRescission/containerRecission\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport FormPageMovimentation from \"../layoutPage/FormPageMovimentation\";\r\nimport FormPageRescission from \"../layoutPage/FormPageRescission\";\r\nimport FormPageVacation from \"../layoutPage/FormPageVacation\";\r\n//import \"../containers/container.css\";\r\n\r\nconst { Header, Footer, Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\n\r\nfunction LayoutPage() {\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header className=\"CVCHeader\"></Header>\r\n        <Content className=\"CVCContent\">\r\n          <Typography>\r\n            <Title level={2}>Recisão</Title>\r\n            <Title level={2} style={{ marginTop: \"-20px\" }}>\r\n              Tarefa: Solicitação\r\n            </Title>\r\n          </Typography>\r\n          <Form wrapperCol={{ span: 12 }} labelAlign=\"left\">\r\n            <Row gutter={20}>\r\n              <Col span={6}>\r\n                <Form.Item\r\n                  name={[\"subject\"]}\r\n                  label={[\"Assunto\"]}\r\n                  labelCol={{ span: 10 }}\r\n                >\r\n                  <Input value={\"boa tarde\"} />\r\n                </Form.Item>\r\n                <Col span={6}></Col>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={20}>\r\n              <Col span={6}>\r\n                <Form.Item\r\n                  name={[\"sendTo\"]}\r\n                  label={[\"Enviar para\"]}\r\n                  labelCol={{ span: 10 }}\r\n                >\r\n                  <Select>\r\n                    <Option value=\"RH Recisão\">Rh Recisão</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button type=\"primary\">Enviar</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Tabs tabPosition=\"top\" defaultActiveKey=\"1\">\r\n            <TabPane tab={[\"Formulário\"]} key={\"1\"}>\r\n              <Space direction=\"vertical\" size={\"large\"}>\r\n                <a href=\"http://localhost:3000/form/movimentacao\">\r\n                  Formulário de Movimentação\r\n                </a>\r\n                <a href=\"http://localhost:3000/form/rescisao\">\r\n                  Formulário de Rescisão\r\n                </a>\r\n                <a href=\"http://localhost:3000/form/ferias\">\r\n                  Formulário de Férias\r\n                </a>\r\n              </Space>\r\n            </TabPane>\r\n            <TabPane tab={[\"Anexos\"]} key={\"2\"}>\r\n              <FormPageRescission />\r\n            </TabPane>\r\n            <TabPane tab={\"Históricos e Observações\"} key={\"3\"}>\r\n              <ContainerRecission />\r\n            </TabPane>\r\n            <TabPane tab={\"Andamento do Processo\"} key={\"4\"}>\r\n              <FormPageVacation />\r\n            </TabPane>\r\n          </Tabs>\r\n        </Content>\r\n        <Footer className=\"CVCFooter\"></Footer>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LayoutPage;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter, Routes } from \"react-router-dom\";\r\nimport FormPageMovimentation from \"../../layoutPage/FormPageMovimentation\";\r\nimport FormPageRescission from \"../../layoutPage/FormPageRescission\";\r\nimport FormPageVacation from \"../../layoutPage/FormPageVacation\";\r\nimport LayoutPage from \"../../layoutPage/LayoutPage\";\r\n\r\nfunction RoutePages() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<LayoutPage />} />\r\n        <Route path=\"/form/movimentacao\" element={<FormPageMovimentation />} />\r\n        <Route path=\"/form/rescisao\" element={<FormPageRescission />} />\r\n        <Route path=\"/form/ferias\" element={<FormPageVacation />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default RoutePages;\r\n","import React, { useState, useEffect } from \"react\";\nimport ContainerIdentify from \"./containers/containersCommonFile/containerIdentify\";\nimport ContainerEmployee from \"./containers/containersCommonFile/containeEmployee\";\nimport \"./App.css\";\nimport ContainerRecission from \"./containers/containersRescission/containerRecission\";\nimport ContainerObservation from \"./containers/containersCommonFile/containerObservation\";\nimport ContainerMovimentHistory from \"./containers/containersMoviment/containerMovimentHistory\";\nimport ContainerSalaryMoviment from \"./containers/containersMoviment/containerSalaryMoviment\";\nimport ContainerStructuralMoviment from \"./containers/containersMoviment/containerStructuralMoviment\";\nimport ContainerInfoVacation from \"./containers/containersVacation/containerInfoVacation\";\nimport ContainerVacation from \"./containers/containersVacation/containerVacation\";\nimport ContainerStability from \"./containers/containersRescission/containerStability\";\nimport FormPageMovimentation from \"./layoutPage/FormPageMovimentation\";\nimport FormPageRescission from \"./layoutPage/FormPageRescission\";\nimport FormPageVacation from \"./layoutPage/FormPageVacation\";\nimport ContainerMoviment from \"./containers/containersMoviment/containerMoviment\";\nimport LayoutPage from \"./layoutPage/LayoutPage\";\nimport Teste from \"./containers/teste\";\nimport RoutePages from \"./controlers/routes/routes\";\n\nimport Demo from \"./layoutPage/LayoutPage\";\nimport { Layout, Tabs, Input, Form } from \"antd\";\n\n//const { Header, Footer, Content } = Layout;\n\n//const { TabPane } = Tabs;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RoutePages />\n    </div>\n  );\n}\n\n/* const carro = [\"Painel 01\", \"Painel 02\", \"Painel 03\", \"Painel 04\"];\n\nfunction App() {\n  return (\n    <Tabs tabPosition=\"top\" defaultActiveKey=\"2\">\n      <TabPane tab=\"Tab 1\" key=\"1\">\n        <FormPageMovimentation />\n      </TabPane>\n      <TabPane tab=\"Tab 2\" key=\"2\">\n        <FormPageMovimentation />\n      </TabPane>\n      <TabPane tab=\"Tab 3\" key=\"3\">\n        <ContainerObservation />\n      </TabPane>\n    </Tabs>\n  );\n} */\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\n//import LayoutPage from \"./layoutPage/LayoutPage\"; /*\n//import axios from \"axios\";\n/* Inicialmente tem que ser importado o pacote antd.css */\n//import \"antd/dist/antd.css\";\n/* Método para configuração do ant design */\n//import { ConfigProvider } from \"antd\";\n/* Configuração do idioma para portugues Brasil */\n//import ptBR from \"antd/lib/locale/pt_BR\";\n//import { TstArray } from \"./controlers/services/testes\";\n/* import {\n  requestCauseDismissal,\n  SendRequestWebService,\n} from \"./controlers/services/userRequest\"; */\n\n/* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\nconst url2 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\n\nconst url3 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\nconst url4 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=com.senior.g5.rh.fp.consultarColaborador&port=ConsultarColaborador&DEBUG=true\";\n\nconst username = \"senior\";\nconst password = \"senior\"; */\n\n/* const config = {\n  withCredentials: true,\n  method: \"post\",\n  headers: {\n    Origin: \"*\",\n    \"Content-Type\": \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  },\n  auth: {\n    username: \"senior\",\n    password: \"senior\",\n  },\n  responseEncoding: \"utf8\",\n  params: {},\n}; */\n\n/* let headers = new Headers();\n\nheaders.append(\"Accept\", \"application/json;charset=utf-8\");\nheaders.append(\n  \"Authorization\",\n  \"Basic \" + window.btoa(username + \":\" + password)\n);\nheaders.append(\"user\", \"senior\");\n\n\n/* fetch(url2, {\n  mode: \"cors\",\n  method: \"post\",\n  /* headers: {\n    Accept: \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  }, \n  headers: headers,\n}).then((res) => {\n  return res.json().then((jso) => {\n    console.log(jso.causaDemissao);\n  });\n}); */\n\n/* fetch(url3, {\n  mode: \"cors\",\n  method: \"post\", */\n/* headers: {\n    Accept: \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  }, */\n/* headers: headers,\n  body: JSON.stringify({\n    tipoMens: \"Dia\",\n  }),\n}).then((res) => {\n  return res.json().then((json) => {\n    console.log(json.mensagem);\n  });\n}); */\n\n/* axios\n  .post(url2, {\n    crossorigin: true,\n    headers: {\n      common: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        WithCredentials: true,\n        \"Access-Control-Allow-Origin\": \"*\",\n        user: \"senior\",\n        Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n      },\n      Origin: \"*\",\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n      user: \"senior\",\n    },\n    //user: \"senior\",\n  })\n  .then((res) => {\n    console.log(res);\n  });\n\n  \n \n\naxios.defaults.headers.post[\"user\"] = \"senior\"; */\n\n/* const array = SendRequestWebService();\nvar array2 = [\"\"];\n\nconsole.log(array);\narray.then((cause: any) => {\n  \n  for (var val in cause) {\n    console.log(cause[val].desDem);\n    \n    array2.push(cause[val].desDem);\n  }\n  \n});\nconsole.log(array2); */\n\n/* const xhttp = new XMLHttpRequest();\nconst param = {\n  tipoMens: \"Dia\",\n};\n\nxhttp.open(\"POST\", url3, false);\nxhttp.setRequestHeader(\n  \"Authorization\",\n  \"Basic \" + window.btoa(username + \":\" + password)\n);\nxhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\nxhttp.setRequestHeader(\"user\", \"senior\");\n\nxhttp.send(JSON.stringify(param));\nlet responseArray = JSON.parse(xhttp.responseText);\n\nconsole.log(responseArray.mensagem); */\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}